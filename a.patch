diff --git a/.cursor/rules.mdc b/.cursor/rules.mdc
new file mode 100644
index 0000000..297dfcd
--- /dev/null
+++ b/.cursor/rules.mdc
@@ -0,0 +1,73 @@
+---
+description:
+globs:
+alwaysApply: false
+---
+# Project Rules and Guidelines
+
+## Documentation Structure
+- All documentation content should be placed in the `docs/` directory
+- Use Markdown (.md) files for all content
+- Follow the structure defined in `mkdocs.yml`
+- Keep documentation files focused and concise
+
+## Code Style
+- Use consistent indentation (4 spaces for Python, 2 spaces for YAML)
+- Follow PEP 8 guidelines for Python code
+- Use descriptive variable and function names
+- Include docstrings for Python functions and classes
+
+## Markdown Guidelines
+- Use ATX-style headers (# for h1, ## for h2, etc.)
+- Include a blank line before and after code blocks
+- Use fenced code blocks with language specification
+- Keep line length under 100 characters where possible
+- Use relative links for internal documentation references
+
+## Version Control
+- Write clear, descriptive commit messages
+- Follow conventional commits format
+- Keep commits focused and atomic
+- Update documentation when making significant changes
+
+## Build and Deployment
+- Test documentation locally before committing
+- Ensure all links are valid
+- Check for broken images and references
+- Verify navigation structure in `mkdocs.yml`
+
+## Dependencies
+- Keep `requirements.txt` up to date
+- Document any new dependencies
+- Use specific version numbers for dependencies
+- Review and update dependencies regularly
+
+## Testing
+- Test all code examples
+- Verify all links work
+- Check for proper rendering of all Markdown features
+- Ensure proper navigation structure
+
+## Security
+- Do not commit sensitive information
+- Use environment variables for sensitive data
+- Follow security best practices for any code examples
+- Review and sanitize user input in examples
+
+## Performance
+- Optimize images before committing
+- Keep documentation pages focused and concise
+- Use appropriate caching strategies
+- Minimize external dependencies
+
+## Accessibility
+- Use proper heading hierarchy
+- Include alt text for images
+- Ensure proper color contrast
+- Use semantic HTML in custom templates
+
+## Maintenance
+- Regular review of documentation accuracy
+- Update outdated information
+- Remove deprecated content
+- Keep documentation in sync with code changes
diff --git a/.cursor/rules/code-style.mdc b/.cursor/rules/code-style.mdc
new file mode 100644
index 0000000..4f05aa1
--- /dev/null
+++ b/.cursor/rules/code-style.mdc
@@ -0,0 +1,70 @@
+---
+description: 
+globs: **/*.py,**/*.ipynb
+alwaysApply: false
+---
+# Code Style Standards
+
+## Python Style
+- Follow PEP 8
+- Use type hints
+- Use docstrings
+- Use clear names
+- Keep functions small
+- Use consistent indent
+- Follow import order
+- Handle exceptions
+- Avoid globals
+- Use list comps
+
+## Project Structure
+- docs/: Main documentation content
+- overrides/: Custom theme overrides
+- mkdocs_plugins/: Custom MkDocs plugins
+- .github/: GitHub workflows and templates
+- .cursor/: Cursor IDE configuration
+- mkdocs.yml: MkDocs configuration
+- requirements.txt: Python dependencies
+- setup.py: Package setup
+- Makefile: Build commands
+- renovate.json: Dependency updates
+- ruff.toml: Python linting configuration
+- LICENSE.txt: Project license
+- README.md: Project documentation
+
+## Testing Style
+- Clear test names
+- Proper org
+- Follow naming
+- Use assertions
+- Keep tests small
+- Use fixtures
+- Follow docs
+- Use decorators
+- Keep data separate
+- Use cleanup
+
+## Agent Code Style
+- Clear class names
+- Follow naming
+- Use proper structure
+- Keep modular
+- Use patterns
+- Follow docs
+- Use interfaces
+- Keep clear
+- Use composition
+- Handle errors
+
+## Technology Stack
+- ruff
+- mypy
+- pytest
+- locust
+- loguru
+
+## Project Structure
+- docs/: Docs
+- mkdocs_plugins/: Scripts
+
+
diff --git a/.cursor/rules/commit_msg.mdc b/.cursor/rules/commit_msg.mdc
new file mode 100644
index 0000000..ce2d693
--- /dev/null
+++ b/.cursor/rules/commit_msg.mdc
@@ -0,0 +1,64 @@
+---
+description: Enforce Conventional Commit Message Standards
+-globs: ["**/*.py", "**/*.md"]
+-tags: ["git", "commits", "conventional-commits"]
+-version: 1.0.0
+-priority: 3
+---
+
+# Conventional Commit Message Guidelines
+
+## Context
+
+This rule ensures that all Git commit messages adhere to the [Conventional Commits](mdc:https:/www.conventionalcommits.org) specification, promoting clarity and consistency in project history.
+
+## Requirements
+
+- **Commit Message Structure**: Must follow the format:
+  ```
+  <type>[optional scope]: <description>
+
+  [optional body]
+
+  [optional footer(s)]
+  ```
+- **Type**: Use lowercase types such as `feat`, `fix`, `docs`, `chore`, etc.
+- **Scope**: Optional, enclosed in parentheses, e.g., `feat(parser): add new feature`.
+- **Description**: Concise summary of the change, starting with a lowercase letter.
+- **Body**: Optional, provides additional context about the change.
+- **Footer**: Optional, includes metadata like `BREAKING CHANGE` or issue references.
+- **Case Sensitivity**: Types are case-insensitive; however, `BREAKING CHANGE` must be uppercase.
+
+## Examples
+
+<example>
+git commit -m "feat: add user authentication module"
+</example>
+
+<example>
+git commit -m "fix(parser): handle null pointer exceptions"
+</example>
+
+<example>
+git commit -m "docs: update API documentation for clarity"
+</example>
+
+<example>
+git commit -m "chore: update dependencies to latest versions"
+</example>
+
+<example>
+git commit -m "refactor(core): improve performance of data processing"
+</example>
+
+<example type="invalid">
+git commit -m "Added new feature"
+</example>
+
+<example type="invalid">
+git commit -m "Fix: corrected issue with login"
+</example>
+
+<example type="invalid">
+git commit -m "update README"
+</example>
diff --git a/.cursor/rules/docker.mdc b/.cursor/rules/docker.mdc
new file mode 100644
index 0000000..d80ebb9
--- /dev/null
+++ b/.cursor/rules/docker.mdc
@@ -0,0 +1,218 @@
+---
+description: This rule file provides comprehensive guidance on Docker best practices, covering Dockerfile construction, image optimization, and security considerations. It aims to improve the efficiency, maintainability, and security of Docker-based projects.
+globs: **/Dockerfile,docker-compose.yml,**/*.dockerfile,**/Dockerfile.*
+alwaysApply: false
+---
+# Docker Best Practices
+
+This document provides comprehensive guidance on Docker best practices, covering Dockerfile construction, image optimization, security considerations, and more. It aims to improve the efficiency, maintainability, and security of Docker-based projects.
+
+## 1. Code Organization and Structure
+
+- **Directory Structure Best Practices:**
+    - Organize your project with a clear separation of concerns.  For example:
+        
+        project-root/
+        ├── Dockerfile            # Dockerfile for building the image
+        ├── docker-compose.yml    # Docker Compose file for multi-container setup
+        ├── .dockerignore         # Specifies intentionally untracked files that Docker should ignore
+        ├── app/                  # Application source code
+        │   ├── ...
+        ├── config/               # Configuration files
+        │   ├── ...
+        ├── data/                 # Data files (if any, though consider volumes)
+        │   ├── ...
+        ├── scripts/              # Scripts for building, deploying, or managing the container
+        │   ├── ...
+        
+    - Keep the `Dockerfile` and `docker-compose.yml` at the root of your project for easy access.
+
+- **File Naming Conventions:**
+    - Use descriptive names for your Dockerfiles (e.g., `Dockerfile.web`, `Dockerfile.api`).
+    - Follow a consistent naming convention for all files and directories.
+
+- **Module Organization:**
+    - Structure your application into modular components to improve reusability and maintainability. This directly affects what goes into a docker image.
+    - Use appropriate build tools (e.g., Maven, Gradle, npm) to manage dependencies and package your application.
+
+- **Component Architecture:**
+    - Design your application as a set of microservices or components, each running in its own container, when appropriate.
+    - Use Docker Compose to orchestrate multi-container applications.
+
+- **Code Splitting Strategies:**
+    - Break down large applications into smaller, more manageable parts to reduce image size and improve build times.
+    - Consider multi-stage builds to include build-time dependencies in one stage and only the runtime dependencies in the final image.
+
+## 2. Common Patterns and Anti-patterns
+
+- **Design Patterns Specific to Docker:**
+    - **Sidecar Pattern:** Run a utility container alongside your main application container (e.g., for logging, monitoring).
+    - **Ambassador Pattern:** Proxy requests to a service running outside the container.
+    - **Adapter Pattern:** Adapt the interface of a service to match the expected interface of a client.
+    - **Init Container Pattern:** Run initialization tasks before the main application container starts.  Often used to set up configuration, prepare databases, etc.
+
+- **Recommended Approaches for Common Tasks:**
+    - **Configuration Management:** Use environment variables to configure your application.
+    - **Logging:** Centralize logging using a logging driver or a dedicated logging container (e.g., Fluentd, Logstash).
+    - **Health Checks:** Implement health checks to ensure that your services are running correctly.
+    - **Process Management:** Use a process manager (e.g., `tini`, `dumb-init`) to handle signal forwarding and zombie process reaping.
+
+- **Anti-patterns and Code Smells to Avoid:**
+    - **Storing secrets in Dockerfile or images:** Never hardcode passwords or API keys in your Dockerfile.
+    - **Running services as root:** Avoid running your application as the root user.
+    - **Installing unnecessary packages:** Keep your images lean by only installing the required dependencies.
+    - **Ignoring `.dockerignore`:** Make sure to use `.dockerignore` to exclude unnecessary files from the build context, reducing image size and build time.
+    - **Using `ADD` instead of `COPY` unnecessarily:** `COPY` is usually more transparent and predictable.
+
+- **State Management Best Practices:**
+    - **Stateless Applications:** Design your application to be stateless whenever possible.
+    - **Volumes:** Use volumes for persistent storage (e.g., databases, logs).
+    - **Bind Mounts:** Use bind mounts for development to allow code changes to be reflected immediately in the container.
+
+- **Error Handling Patterns:**
+    - Implement robust error handling in your application.
+    - Use appropriate logging levels to capture errors and warnings.
+    - Implement retry mechanisms for transient errors.
+    - Monitor your application for errors and take corrective actions.
+
+## 3. Performance Considerations
+
+- **Optimization Techniques:**
+    - **Multi-stage builds:** Use multi-stage builds to create smaller, more efficient images.
+    - **Minimize layers:** Combine multiple commands into a single layer using `&&`.
+    - **Use a lightweight base image:** Choose a minimal base image like Alpine Linux.
+    - **Optimize caching:** Order your Dockerfile commands to maximize cache reuse.
+
+- **Memory Management:**
+    - Set memory limits for your containers to prevent them from consuming excessive resources.
+    - Monitor memory usage and optimize your application accordingly.
+
+- **Rendering Optimization (if applicable):**
+    - If your application involves rendering, optimize the rendering process (e.g., using caching, lazy loading).
+
+- **Bundle Size Optimization:**
+    - Minimize the size of your application bundle by removing unnecessary dependencies and assets.
+    - Use tools like webpack or Parcel to optimize your bundle.
+
+- **Lazy Loading Strategies:**
+    - Implement lazy loading for resources that are not immediately needed.
+
+## 4. Security Best Practices
+
+- **Common Vulnerabilities and How to Prevent Them:**
+    - **Image vulnerabilities:** Regularly scan your images for vulnerabilities using tools like Clair or Trivy.
+    - **Configuration vulnerabilities:** Secure your container configurations to prevent unauthorized access.
+    - **Network vulnerabilities:** Limit network exposure and use network policies to isolate containers.
+    - **Privilege escalation:** Avoid running containers with unnecessary privileges.
+
+- **Input Validation:**
+    - Validate all input data to prevent injection attacks.
+
+- **Authentication and Authorization Patterns:**
+    - Implement robust authentication and authorization mechanisms.
+    - Use secure protocols like HTTPS.
+    - Store secrets securely using tools like HashiCorp Vault or Kubernetes Secrets.
+
+- **Data Protection Strategies:**
+    - Encrypt sensitive data at rest and in transit.
+    - Use appropriate access control mechanisms to protect data.
+
+- **Secure API Communication:**
+    - Use secure protocols like HTTPS for API communication.
+    - Implement authentication and authorization for API endpoints.
+    - Rate limit API requests to prevent abuse.
+
+## 5. Testing Approaches
+
+- **Unit Testing Strategies:**
+    - Write unit tests to verify the functionality of individual components.
+    - Use mocking and stubbing to isolate components during testing.
+
+- **Integration Testing:**
+    - Write integration tests to verify the interaction between different components.
+    - Test the integration with external services and databases.
+
+- **End-to-end Testing:**
+    - Write end-to-end tests to verify the entire application flow.
+    - Use tools like Selenium or Cypress to automate end-to-end tests.
+
+- **Test Organization:**
+    - Organize your tests into a clear and maintainable structure.
+    - Use descriptive names for your test cases.
+
+- **Mocking and Stubbing:**
+    - Use mocking and stubbing to isolate components during testing.
+    - Mock external services and databases to simulate different scenarios.
+
+## 6. Common Pitfalls and Gotchas
+
+- **Frequent Mistakes Developers Make:**
+    - **Not using `.dockerignore`:** This can lead to large image sizes and slow build times.
+    - **Not pinning package versions:** This can lead to unexpected build failures due to dependency updates.
+    - **Exposing unnecessary ports:** This can increase the attack surface of your application.
+    - **Not cleaning up after installing packages:** This can lead to larger image sizes.
+    - **Using the shell form of `CMD` or `ENTRYPOINT`:** Use the exec form (`["executable", "param1", "param2"]`) to avoid shell injection vulnerabilities and signal handling issues.
+
+- **Edge Cases to Be Aware Of:**
+    - **File permissions:** Ensure that your application has the correct file permissions.
+    - **Timezone configuration:** Configure the correct timezone for your container.
+    - **Resource limits:** Set appropriate resource limits for your containers.
+
+- **Version-Specific Issues:**
+    - Be aware of version-specific issues and compatibility concerns.
+    - Test your application with different Docker versions to ensure compatibility.
+
+- **Compatibility Concerns:**
+    - Ensure that your application is compatible with the base image you are using.
+    - Test your application on different platforms to ensure cross-platform compatibility.
+
+- **Debugging Strategies:**
+    - Use `docker logs` to view container logs.
+    - Use `docker exec` to execute commands inside a running container.
+    - Use `docker inspect` to inspect container metadata.
+    - Use a debugger to debug your application code.
+
+## 7. Tooling and Environment
+
+- **Recommended Development Tools:**
+    - **Docker Desktop:** For local development and testing.
+    - **Docker Compose:** For orchestrating multi-container applications.
+    - **Visual Studio Code with Docker extension:** For enhanced Docker development experience.
+    - **Container image scanners (e.g., Trivy, Clair):** For identifying vulnerabilities in container images.
+
+- **Build Configuration:**
+    - Use a consistent build configuration for all your images.
+    - Automate the build process using a build tool (e.g., Make, Gradle).
+
+- **Linting and Formatting:**
+    - Use a linter to enforce code style and best practices.
+    - Use a formatter to automatically format your code.
+
+- **Deployment Best Practices:**
+    - Use a container orchestration platform like Kubernetes or Docker Swarm.
+    - Implement rolling updates and rollbacks.
+    - Monitor your application for performance and availability.
+
+- **CI/CD Integration:**
+    - Integrate Docker into your CI/CD pipeline.
+    - Automate the build, test, and deployment process.
+    - Use tools like Jenkins, GitLab CI, or CircleCI.
+
+---
+
+## Additional Notes:
+
+-  Always use a specific tag for the base image (e.g., `ubuntu:20.04`) instead of `latest` to ensure reproducibility.
+- Use `.dockerignore` to exclude files and directories that are not needed in the image. This reduces the image size and improves build performance.
+- When possible, use the official Docker images from Docker Hub. They are usually well-maintained and optimized.
+- Consider using a tool like `docker-slim` to further reduce the size of your Docker images by removing unnecessary files and dependencies after the build process.
+- Understand the Docker build context and ensure you're only including necessary files and directories. A large build context slows down builds and increases image sizes.
+- Regularly update your base images to patch security vulnerabilities.
+- Use environment variables to configure your application, making it more flexible and portable.
+- DO NOT Implement health checks instruction `HEALTHCHECK` in your Dockerfiles. This wil be done at Kubernetes level.
+- Consider using a private Docker registry to store your images securely.
+- Document your Dockerfiles and images to make them easier to understand and maintain.
+- Review your Dockerfiles regularly to ensure they are up-to-date and following best practices.
+- Consider using a Dockerfile linter like `hadolint` to identify potential issues and enforce best practices.
+
+By following these guidelines, you can create efficient, maintainable, and secure Docker-based applications.
\ No newline at end of file
diff --git a/.cursor/rules/documentation.mdc b/.cursor/rules/documentation.mdc
new file mode 100644
index 0000000..7d8e3b1
--- /dev/null
+++ b/.cursor/rules/documentation.mdc
@@ -0,0 +1,39 @@
+---
+description: 
+globs: 
+alwaysApply: false
+---
+# Documentation Standards
+
+## Code Documentation
+- Use Google-style docstrings with type hints
+- Document parameters, exceptions, and side effects
+- Include clear examples and keep docs updated
+- Follow consistent documentation style
+
+## API Documentation
+- Document endpoints with examples and schemas
+- Include authentication and error documentation
+- Document rate limits and security measures
+- Keep OpenAPI/Swagger docs updated
+
+## Project Documentation
+- Maintain comprehensive README
+- Document installation and configuration
+- Include deployment and troubleshooting guides
+- Document architecture and security
+
+## Technology Stack
+- Sphinx (documentation generation)
+- MkDocs (documentation hosting)
+- pdoc (API documentation)
+- docstring-coverage (coverage checking)
+
+## Project Structure
+- docs/api/: API documentation
+- docs/guides/: User guides
+- docs/development/: Development docs
+- docs/architecture/: Architecture docs
+- docs/security/: Security docs
+
+@README.md
diff --git a/.cursor/rules/mkdocs.mdc b/.cursor/rules/mkdocs.mdc
new file mode 100644
index 0000000..7f9f12b
--- /dev/null
+++ b/.cursor/rules/mkdocs.mdc
@@ -0,0 +1,74 @@
+---
+description: 
+globs: 
+alwaysApply: true
+---
+# Project Rules and Guidelines
+
+## Documentation Structure
+- All documentation content should be placed in the `docs/` directory
+- Use Markdown (.md) files for all content
+- Follow the structure defined in `mkdocs.yml`
+- Keep documentation files focused and concise
+
+## Code Style
+- Use consistent indentation (4 spaces for Python, 2 spaces for YAML)
+- Follow PEP 8 guidelines for Python code
+- Use descriptive variable and function names
+- Include docstrings for Python functions and classes
+
+## Markdown Guidelines
+- Use ATX-style headers (# for h1, ## for h2, etc.)
+- Include a blank line before and after code blocks
+- Use fenced code blocks with language specification
+- Keep line length under 100 characters where possible
+- Use relative links for internal documentation references
+
+## Version Control
+- Write clear, descriptive commit messages
+- Follow conventional commits format
+- Keep commits focused and atomic
+- Update documentation when making significant changes
+
+## Build and Deployment
+- Test documentation locally before committing
+- Ensure all links are valid
+- Check for broken images and references
+- Verify navigation structure in `mkdocs.yml`
+
+## Dependencies
+- Keep `requirements.txt` up to date
+- Document any new dependencies
+- Use specific version numbers for dependencies
+- Review and update dependencies regularly
+
+## Testing
+- Test all code examples
+- Verify all links work
+- Check for proper rendering of all Markdown features
+- Ensure proper navigation structure
+
+## Security
+- Do not commit sensitive information
+- Use environment variables for sensitive data
+- Follow security best practices for any code examples
+- Review and sanitize user input in examples
+
+## Performance
+- Optimize images before committing
+- Keep documentation pages focused and concise
+- Use appropriate caching strategies
+- Minimize external dependencies
+
+## Accessibility
+- Use proper heading hierarchy
+- Include alt text for images
+- Ensure proper color contrast
+- Use semantic HTML in custom templates
+
+## Maintenance
+- Regular review of documentation accuracy
+- Update outdated information
+- Remove deprecated content
+- Keep documentation in sync with code changes
+
diff --git a/.cursor/settings/ai-config.yaml b/.cursor/settings/ai-config.yaml
new file mode 100644
index 0000000..b24fdaf
--- /dev/null
+++ b/.cursor/settings/ai-config.yaml
@@ -0,0 +1,125 @@
+# AI Configuration for Cursor
+
+# Only custom AI settings that differ from defaults are included here
+# All other settings use Cursor's default values
+
+# Model Configuration
+model_config:
+  # Primary Model Settings
+  primary:
+    name: "gpt-4"
+    temperature: 0.7
+    max_tokens: 2000
+
+  # Fallback Model Settings
+  fallback:
+    name: "gpt-3.5-turbo"
+    max_tokens: 1000
+
+# Context Management
+context:
+  # File Context
+  file:
+    max_files: 10
+    max_tokens_per_file: 1000
+    include_patterns:
+      - "*.py"
+      - "*.md"
+      - "*.yaml"
+      - "*.json"
+    exclude_patterns:
+      - "*.pyc"
+      - "__pycache__"
+      - "*.log"
+      - "*.tmp"
+
+  # Project Context
+  project:
+    include_directories:
+      - "src/"
+      - "tests/"
+      - "docs/"
+      - "config/"
+      - "scripts/"
+    exclude_directories:
+      - ".venv/"
+      - ".tmp/"
+      - ".git/"
+
+# Code Generation
+code_generation:
+  # Completion Settings
+  completion:
+    max_tokens: 200
+    temperature: 0.7
+    top_p: 0.9
+    frequency_penalty: 0.0
+    presence_penalty: 0.0
+
+  # Refactoring Settings
+  refactoring:
+    max_tokens: 500
+    temperature: 0.3
+    top_p: 0.9
+    frequency_penalty: 0.0
+    presence_penalty: 0.0
+
+  # Documentation Settings
+  documentation:
+    max_tokens: 300
+    temperature: 0.5
+    top_p: 0.9
+    frequency_penalty: 0.0
+    presence_penalty: 0.0
+
+# AI Features
+features:
+  # Code Analysis
+  analysis:
+    enable_semantic_analysis: true
+    enable_syntax_analysis: true
+    enable_type_analysis: true
+    enable_dependency_analysis: true
+    enable_security_analysis: true
+
+  # Code Generation
+  generation:
+    enable_code_completion: true
+    enable_code_suggestion: true
+    enable_code_refactoring: true
+    enable_code_documentation: true
+    enable_code_testing: true
+
+  # Code Understanding
+  understanding:
+    enable_code_explanation: true
+    enable_code_summarization: true
+    enable_code_search: true
+    enable_code_navigation: true
+    enable_code_debugging: true
+
+# AI Assistant Behavior
+assistant:
+  # Response Style
+  style:
+    tone: "professional"
+    formality: "formal"
+    verbosity: "concise"
+    detail_level: "high"
+    explanation_depth: "detailed"
+
+  # Interaction Settings
+  interaction:
+    enable_follow_up_questions: true
+    enable_clarification_requests: true
+    enable_error_correction: true
+    enable_suggestion_improvement: true
+    enable_context_awareness: true
+
+  # Learning Settings
+  learning:
+    enable_feedback_learning: true
+    enable_context_learning: true
+    enable_preference_learning: true
+    enable_style_learning: true
+    enable_pattern_learning: true 
\ No newline at end of file
diff --git a/.cursor/settings/keybindings.yaml b/.cursor/settings/keybindings.yaml
new file mode 100644
index 0000000..04752d8
--- /dev/null
+++ b/.cursor/settings/keybindings.yaml
@@ -0,0 +1,118 @@
+# Cursor Keybindings for AI-Assisted Coding
+
+# Only custom keybindings that differ from defaults are included here
+# All other keybindings use Cursor's default values
+
+# AI Commands
+ai_commands:
+  # Code Generation
+  - command: "ai.generateCode"
+    key: "ctrl+shift+g"
+    when: "editorTextFocus"
+
+  - command: "ai.completeCode"
+    key: "ctrl+space"
+    when: "editorTextFocus"
+
+  - command: "ai.suggestCode"
+    key: "alt+."
+    when: "editorTextFocus"
+
+  # Code Understanding
+  - command: "ai.explainCode"
+    key: "ctrl+shift+e"
+    when: "editorTextFocus"
+
+  - command: "ai.summarizeCode"
+    key: "ctrl+shift+s"
+    when: "editorTextFocus"
+
+  # Code Refactoring
+  - command: "ai.refactorCode"
+    key: "ctrl+shift+r"
+    when: "editorTextFocus"
+
+  - command: "ai.extractMethod"
+    key: "ctrl+shift+m"
+    when: "editorTextFocus"
+
+  # Documentation
+  - command: "ai.generateDocstring"
+    key: "ctrl+shift+d"
+    when: "editorTextFocus"
+
+  # Testing
+  - command: "ai.generateTest"
+    key: "ctrl+shift+t"
+    when: "editorTextFocus"
+
+# Editor Commands
+editor_commands:
+  # Navigation
+  - command: "editor.action.goToDefinition"
+    key: "f12"
+    when: "editorTextFocus"
+
+  - command: "editor.action.referenceSearch.trigger"
+    key: "shift+f12"
+    when: "editorTextFocus"
+
+  - command: "workbench.action.quickOpen"
+    key: "ctrl+p"
+    when: "editorTextFocus"
+
+  # Formatting
+  - command: "editor.action.formatDocument"
+    key: "shift+alt+f"
+    when: "editorTextFocus"
+
+  - command: "editor.action.formatSelection"
+    key: "ctrl+k ctrl+f"
+    when: "editorTextFocus"
+
+  # Selection
+  - command: "editor.action.selectAll"
+    key: "ctrl+a"
+    when: "editorTextFocus"
+
+  - command: "editor.action.smartSelect.expand"
+    key: "ctrl+shift+right"
+    when: "editorTextFocus"
+
+# Terminal Commands
+terminal_commands:
+  - command: "workbench.action.terminal.toggleTerminal"
+    key: "ctrl+`"
+    when: "editorTextFocus"
+
+  - command: "workbench.action.terminal.new"
+    key: "ctrl+shift+`"
+    when: "editorTextFocus"
+
+# Git Commands
+git_commands:
+  - command: "git.commit"
+    key: "ctrl+shift+c"
+    when: "editorTextFocus"
+
+  - command: "git.push"
+    key: "ctrl+shift+p"
+    when: "editorTextFocus"
+
+  - command: "git.pull"
+    key: "ctrl+shift+l"
+    when: "editorTextFocus"
+
+# Debug Commands
+debug_commands:
+  - command: "workbench.action.debug.start"
+    key: "f5"
+    when: "editorTextFocus"
+
+  - command: "workbench.action.debug.stop"
+    key: "shift+f5"
+    when: "editorTextFocus"
+
+  - command: "editor.debug.action.toggleBreakpoint"
+    key: "f9"
+    when: "editorTextFocus" 
\ No newline at end of file
diff --git a/.cursor/settings/settings.yaml b/.cursor/settings/settings.yaml
new file mode 100644
index 0000000..b30dcac
--- /dev/null
+++ b/.cursor/settings/settings.yaml
@@ -0,0 +1,187 @@
+# Cursor Settings for AI-Assisted Coding
+
+# Only custom settings that differ from defaults are included here
+# All other settings use Cursor's default values
+
+# Editor Settings
+editor:
+  # Code Intelligence
+  code_intelligence:
+    enable_semantic_highlighting: true
+
+# AI Settings
+ai:
+  # Model Settings
+  model:
+    default_model: "gpt-4"
+    fallback_model: "gpt-3.5-turbo"
+
+# Project Settings
+project:
+  # Language Settings
+  languages:
+    python:
+      enable_type_hints: true
+      enable_docstrings: true
+      enable_linting: true
+      enable_formatting: true
+      enable_testing: true
+
+# Editor Settings
+editor:
+  # Code Intelligence
+  code_intelligence:
+    enable_semantic_highlighting: true
+    enable_inline_suggestions: true
+    enable_code_lens: true
+    enable_parameter_hints: true
+    enable_reference_highlighting: true
+
+# AI Features
+ai_features:
+  enable_ai_completions: true
+  enable_ai_suggestions: true
+  enable_ai_explanations: true
+  enable_ai_refactoring: true
+  enable_ai_documentation: true
+  enable_ai_testing: true
+  enable_ai_debugging: true
+
+# Code Navigation
+navigation:
+  enable_go_to_definition: true
+  enable_find_references: true
+  enable_symbol_search: true
+  enable_file_search: true
+  enable_workspace_search: true
+
+# Code Formatting
+formatting:
+  enable_format_on_save: true
+  enable_format_on_paste: true
+  enable_format_on_type: true
+  enable_format_on_commit: true
+
+# Code Actions
+actions:
+  enable_quick_fixes: true
+  enable_refactoring: true
+  enable_organize_imports: true
+  enable_rename: true
+  enable_extract_method: true
+
+# AI Settings
+ai:
+  # Model Settings
+  model:
+    default_model: "gpt-4"
+    fallback_model: "gpt-3.5-turbo"
+    temperature: 0.7
+    max_tokens: 2000
+    top_p: 0.9
+    frequency_penalty: 0.0
+    presence_penalty: 0.0
+
+# Context Settings
+context:
+  enable_file_context: true
+  enable_project_context: true
+  enable_workspace_context: true
+  enable_git_context: true
+  context_window: 8000
+  max_files_in_context: 10
+
+# Completion Settings
+completion:
+  enable_inline_completions: true
+  enable_multi_line_completions: true
+  enable_function_completions: true
+  enable_docstring_completions: true
+  enable_test_completions: true
+
+# Suggestion Settings
+suggestion:
+  enable_code_suggestions: true
+  enable_docstring_suggestions: true
+  enable_test_suggestions: true
+  enable_refactoring_suggestions: true
+  enable_bug_fix_suggestions: true
+
+# Project Settings
+project:
+  # Language Settings
+  languages:
+    python:
+      enable_type_hints: true
+      enable_docstrings: true
+      enable_linting: true
+      enable_formatting: true
+      enable_testing: true
+
+  # Git Settings
+  git:
+    enable_git_integration: true
+    enable_git_lens: true
+    enable_git_history: true
+    enable_git_blame: true
+    enable_git_stash: true
+
+  # Testing Settings
+  testing:
+    enable_test_explorer: true
+    enable_test_coverage: true
+    enable_test_debugging: true
+    enable_test_generation: true
+    enable_test_runner: true
+
+# Workspace Settings
+workspace:
+  # File Settings
+  files:
+    enable_file_watcher: true
+    enable_file_search: true
+    enable_file_explorer: true
+    enable_file_preview: true
+    enable_file_history: true
+
+  # Terminal Settings
+  terminal:
+    enable_integrated_terminal: true
+    enable_terminal_shell: true
+    enable_terminal_tasks: true
+    enable_terminal_debugging: true
+    enable_terminal_history: true
+
+  # Debug Settings
+  debug:
+    enable_debugging: true
+    enable_debug_console: true
+    enable_debug_variables: true
+    enable_debug_watch: true
+    enable_debug_breakpoints: true
+
+# UI Settings
+ui:
+  # Theme Settings
+  theme:
+    enable_dark_mode: true
+    enable_high_contrast: false
+    enable_minimap: true
+    enable_breadcrumbs: true
+    enable_activity_bar: true
+
+  # Layout Settings
+  layout:
+    enable_sidebar: true
+    enable_panel: true
+    enable_status_bar: true
+    enable_editor_tabs: true
+    enable_editor_groups: true
+
+  # Customization Settings
+  customization:
+    enable_custom_fonts: true
+    enable_custom_icons: true
+    enable_custom_colors: true
+    enable_custom_keybindings: true
+    enable_custom_commands: true 
\ No newline at end of file
diff --git a/Makefile b/Makefile
index 88fe360..11e5f50 100644
--- a/Makefile
+++ b/Makefile
@@ -1,4 +1,4 @@
-.PHONY: install serve clean
+.PHONY: install serve fmt clean
 .DEFAULT_GOAL := serve
 
 install:
@@ -7,5 +7,9 @@ install:
 serve:
 	mkdocs serve
 
+fmt:
+	ruff format .
+	ruff check --fix .
+
 clean:
 	git clean -Xdf
diff --git a/docs/README.md b/docs/README.md
index 972e0a8..e97da2e 100644
--- a/docs/README.md
+++ b/docs/README.md
@@ -1,34 +1,67 @@
-# Home 
+# Welcome to Random Musings
 
-> Random musing of a curious engineer!
+> Random musings of a curious engineer and data scientist exploring the intersection of technology, science, and creativity.
 
-## Book Release Announcements 
+## Featured Content
 
-I am thrilled to announce the release of "Deep Learning at Scale: At the Intersection of Hardware, Software, and Data" - an O'Reilly Book"! I have been working on this project for over 2 years with my team at O'Reilly media.
+### Latest Book Release
 
-### Deep Learning at Scale - An O'Reilly Book
+!!! success "Deep Learning at Scale - An O'Reilly Book"
 
-> "Deep Learning at Scale: At the Intersection of Hardware, Software, and Data" (O'Reilly) by Suneeta Mall illustrates complex concepts of full stack deep learning and reinforces them through hands-on exercises to arm you with tools and techniques to scale your project. A scaling effort is only beneficial when it's effective and efficient. To that end, this guide explains the intricate concepts and techniques that will help you scale effectively and efficiently.
+    I am thrilled to announce the release of "Deep Learning at Scale: At the Intersection of Hardware, Software, and Data" - an O'Reilly Book! This project represents over 2 years of work with my team at O'Reilly media.
 
-[![](https://a.impactradius-go.com/display-ad/15173-2121843)](https://oreillymedia.pxf.io/c/5668688/2121843/15173)
+    > "Deep Learning at Scale: At the Intersection of Hardware, Software, and Data" (O'Reilly) by Suneeta Mall illustrates complex concepts of full stack deep learning and reinforces them through hands-on exercises to arm you with tools and techniques to scale your project. A scaling effort is only beneficial when it's effective and efficient. To that end, this guide explains the intricate concepts and techniques that will help you scale effectively and efficiently.
 
+    [![Deep Learning at Scale - An O'reilly Book](../../resources/books/15173-2121843.jpg)](https://oreillymedia.pxf.io/c/5668688/2121843/15173)
 
-## **Order your copy today**
+    #### Order your copy today
 
-To order your copy, use the following links based on your preferred format:
+    !!! note "Kindle Edition"
+        [:fontawesome-brands-aws: Amazon US](https://www.amazon.com/dp/B0D7F9KZWC) | [:fontawesome-brands-aws: Amazon AU](https://www.amazon.com.au/dp/B0D7F9KZWC)
 
-!!! note Kindle
-[:fontawesome-brands-aws: - Amazon](https://www.amazon.com/dp/B0D7F9KZWC) | [:fontawesome-brands-aws: - Amazon AU](https://www.amazon.com.au/dp/B0D7F9KZWC)
+    !!! note "Paperback Edition"
+        [:fontawesome-brands-aws: Amazon US](https://www.amazon.com/dp/1098145283) | [:fontawesome-brands-aws: Amazon AU](https://www.amazon.com.au/dp/1098145283)
 
-!!! note Paperback
-[:fontawesome-brands-aws: - Amazon](https://www.amazon.com/dp/1098145283) | [:fontawesome-brands-aws: - Amazon AU](https://www.amazon.com.au/dp/1098145283)
+    !!! note "30 Days Trial Access"
+        [30 days trial - :fontawesome-solid-briefcase:](https://oreillymedia.pxf.io/c/5668688/2121843/15173)
 
-Alternatively, you can access the book using the 30-day trial link:
+    For more information, see details in the [project](/projects/oreilly_deep_learning_at_scale/)
 
-!!! note "30 Days trial access by O'Reilly Media"
-[30 days trial - :fontawesome-solid-briefcase:](https://oreillymedia.pxf.io/c/5668688/2121843/15173)
-<!-- [![](https://a.impactradius-go.com/display-ad/15173-2121843)](https://oreillymedia.pxf.io/c/5668688/2121843/15173) -->
+## Recent Blog Posts
 
-## More info
+!!! abstract "Latest Articles"
+    - [May 30, 2024 - Deep Learning at Scale](/blog/posts/2024-05-30-Deep-learning-at-scale/)
+    - [May 10, 2025 - Cassie 2.0: The Next Generation](/blog/posts/2025-05-10-cassie-2.0/)
+    - [January 7, 2024 - ChatGPT vs Me as a Children's Book Author](/blog/posts/2024-01-07-ChatGPT_vs_me_kids_book_author/)
 
-For more information, see details in the [project](/projects/oreilly_deep_learning_at_scale/)
+## Featured Projects
+
+!!! tip "Explore My Work"
+    - [Deep Learning at Scale](/projects/oreilly_deep_learning_at_scale/)
+    - [Label Noise with Clean Lab](/projects/feature_analysis/)
+    - [Reproducible ML](/projects/reproducible-ml/)
+
+## Upcoming Talks
+
+!!! info "Speaking Engagements"
+    - [Knowledge Graph Conference 2022](/talks/KGC_NY_2022)
+    - [KubeCon NA 2021](/talks/KubeCon_NA_2021)
+    - [Kafka Summit APAC 2021](/talks/Kafka_Summit_APAC_2021)
+
+## Connect With Me
+
+!!! example "Let's Connect"
+    - [:fontawesome-brands-linkedin: LinkedIn](https://www.linkedin.com/in/suneeta-mall-a6a0507/)
+    - [:fontawesome-brands-github: GitHub](https://github.com/suneeta-mall)
+    - [:fontawesome-brands-x-twitter: Twitter](https://x.com/suneetamall/)
+    - [:fontawesome-brands-medium: Medium](https://www.medium.com/@suneetamall)
+    - [:fontawesome-brands-google-scholar: Google Scholar](https://scholar.google.com.au/citations?hl=en&user=WD712CUAAAAJ)
+    - [:fontawesome-brands-researchgate: ResearchGate](https://www.researchgate.net/profile/Suneeta_Mall3)
+    - [:fontawesome-solid-envelope: Email](mailto:suneetamall@gmail.com)
+
+## Subscribe to Updates
+
+!!! tip "Stay Updated"
+    Subscribe to my newsletter to receive updates about new articles, projects, and speaking engagements.
+
+    [:fontawesome-solid-rss: RSS Feed](https://suneeta-mall.github.io/feed_rss_created.xml)
diff --git a/docs/about.md b/docs/about.md
index 1916a19..79d1168 100644
--- a/docs/about.md
+++ b/docs/about.md
@@ -2,44 +2,55 @@
 title: About Me 
 ---
 
-Suneeta is passionate about solving real-world problems with engineering, data, science, and machine learning. She's a PhD in applied science with a computer science and engineering background. She has extensive distributed, scalable computing and machine learning experience from IBM Software Labs, Expedita, USyd, Nearmap and more recently harrison.ai.
+<img src="../../resources/me.png" alt="Suneeta Mall" style="border-radius: 50%; width: 200px; height: 200px; object-fit: cover; display: block; margin: 0 auto;">
 
-She currently leads the AI Engineering division of [harrison.ai](https://harrison.ai/), a clinician-led artificial intelligence medical technology company tackling some of the biggest issues in healthcare causing inequitable diagnosis today.
+<br/>
 
-She believes in lifelong learning and is passionate about knowledge sharing. She is also an author for [O'Reilly](https://www.oreilly.com/pub/au/8214) and writes [technical blogs](https://suneeta-mall.github.io/) in her spare time.
+## Current Role
 
+As Head of AI Engineering at [harrison.ai](https://harrison.ai/), I lead teams developing breakthrough AI solutions that transform healthcare delivery across radiology and pathology. My work has created impact at scale—from pioneering Harrison.rad.1 (radiology's first foundation model) to deploying AI systems serving millions of patients in over 1,000 healthcare facilities worldwide.
 
-<br/>
+I believe that "Transforming a formidable vision into reality by serving the team with empathy, courage, and action is leadership." This philosophy guides my approach to solving complex challenges through collaborative innovation. Whether developing regulatory-cleared medical AI solutions, authoring ["Deep Learning at Scale" (O'Reilly)](https://www.oreilly.com/pub/au/8214), or mentoring the next generation of technologists, I remain focused on creating technology that genuinely improves lives.
 
+My career spans pioneering research, enterprise AI scaling at Nearmap, and now healthcare transformation—all united by a commitment to technical excellence, responsible innovation, and building diverse teams that challenge each other toward better outcomes.
 
-<!-- {: .oversized}
-![](/assets/img/cover.png) -->
-<br/>
+## Featured Publications & Books
 
-Education
----------
+### Books
+- [Deep Learning at Scale: At the Intersection of Hardware, Software, and Data](https://www.oreilly.com/library/view/deep-learning-at/9781098145279/), 2024 by O'reilly Media
+- [Curious Cassie's Beach Ride Quest](https://www.amazon.com.au/dp/B0BPQQPYD8) 2023
+- IBM Redbooks: Creating Plugins for Lotus Notes, Sametime, and Symphony. [IBM RedBook 2011][ibm_redbook]
+- Face-Off: collection of 21 self-composed poems. [Poems, 2009][faceoff]
 
+### Key Publications
+- Can a Machine Learn from Radiologists' Visual Search Behaviour and Their Interpretation of Mammograms—a Deep-Learning Study. [Journal of Digital Imaging 2019][jdi_2019]
+- Missed cancer and visual search of mammograms: what feature-based Machine Learning can tell us that deep-convolution learning cannot. [SPIE Medical Imaging 2019][spie_2019]
+- Can digital breast tomosynthesis perform better than standard digital mammography work-up in breast cancer assessment clinic? [European Radiology 2018][eu_rad_2018]
+- A deep (learning) dive into visual search behaviour of breast radiologists. [SPIE Medical Imaging 2018][spie_2018]
+- Modeling visual search behavior of breast radiologists using a deep convolution neural network. [SPIE Journal of Medical Imaging, 2018][spie_jmi_2018]
+
+### Patents
+- [Display of information in computing devices][patent], 2013
+
+## Education & Research
+
+### Education
 - [University of Sydney][sydu], 2019, Doctor of Philosophy. (Medical Image Optimisation and Perception/Breast Cancer/Machine Learning/Radiology)
 - [University of Sydney][sydu], 2015, Master of Applied Science (by research), Medical Image Optimisation and Perception.
 - [Harcourt Butler Technological Institute, Kanpur, India][hbti], 2007, Bachelor of Technology (BTech) Computer Science and Engineering.
 
-
-Thesis
----------
+### Thesis
 - [Modelling the interpretation of digital mammography using high order statistics and deep machine learning][thesis]
 
+## Additional Publications
 
-Publications
----------
-- Can a Machine Learn from Radiologists’ Visual Search Behaviour and Their Interpretation of Mammograms—a Deep-Learning Study. [Journal of Digital Imaging 2019][jdi_2019]
-- Missed cancer and visual search of mammograms: what feature-based Machine Learning can tell us that deep-convolution learning cannot. [SPIE Medical Imaging 2019][spie_2019]
-- Can digital breast tomosynthesis perform better than standard digital mammography work-up in breast cancer assessment clinic? [European Radiology 2018][eu_rad_2018]
-- A deep (learning) dive into visual search behaviour of breast radiologists. [SPIE Medical Imaging 2018][spie_2018]
-- Modeling visual search behavior of breast radiologists using a deep convolution neural network. [SPIE Journal of Medical Imaging, 2018][spie_jmi_2018]
+### Academic Publications
 - Modelling the interpretation of digital mammography using high order statistics and deep machine learning. [University of Sydney, 2018][thesis]
 - Fixated and Not Fixated Regions of Mammograms  A Higher-Order Statistical Analysis of Visual Search Behavior. [Academic radiology 2017][arad_2017]
 - The role of digital breast tomosynthesis in the breast assessment clinic: a review. [Journal of Medical Radiation Science, 2017][jmrs_2017]
 - Implementation and value of using a split-plot reader design in a study of digital breast tomosynthesis in a breast cancer assessment clinic. [SPIE  Medical Imaging 2015][spie_2015]
+
+### Technical Publications
 - Automated voice marking of a data/voice streams basing on end users profile and related data. [ip.com 2012][000214706]
 - Folksonomic approach to security systems. [ip.com 2011][000207906]
 - System and method to automatically provide optimal content based on vision and eye movement. [ip.com 2011][000208045]
@@ -47,38 +58,20 @@ Publications
 - Acceptability indicators in emails. [ip.com 2011][000212197D]
 - An optimized human face detection and feature extraction algorithm. [ip.com 2010][000197147]
 
+## Teaching & Courses
 
-Patents
----------
-- [Display of information in computing devices][patent], 2013.
-
-
-Books
----------
-- [Deep Learning at Scale: At the Intersection of Hardware, Software, and Data](https://www.oreilly.com/library/view/deep-learning-at/9781098145279/), 2024 by O'reilly Media
-- IBM Redbooks: Creating Plugins for Lotus Notes, Sametime, and Symphony. [IBM RedBook 2011][ibm_redbook]
-- [Curious Cassie's Beach Ride Quest](https://www.amazon.com.au/dp/B0BPQQPYD8) 2023
-- Face-Off: collection of 21 self-composed poems. [Poems, 2009][faceoff]
-
-Published courses
----------
+### Published Courses
 - Reproducible Deep Learning is published on [O'reilly][oreilly] platform as an interactive katacoda scenario series. It is four parts course:
     - [Reproducible Deep Learning: Semantic Segmentation on Oxford Pets Dataset]
     - [Reproducible Deep Learning: Identifying the Reproducibility Challenge]
     - [Reproducible Deep Learning: Random Seeds and Process-Parallelism]
     - [Reproducible Deep Learning: Achieving 100% Reproducibility]
 
+## External Content
 
-Published blogs on external platforms:
----------
+### Blogs
 - [Suneeta@Towards Data Science]
 
-
-
-
-
-
-
 [oreilly]: https://oreilly.com
 [sydu]: https://sydney.edu.au/
 [thesis]: https://ses.library.usyd.edu.au/handle/2123/19987
diff --git a/docs/blog/.authors.yml b/docs/blog/.authors.yml
index 143e4df..a4696f0 100644
--- a/docs/blog/.authors.yml
+++ b/docs/blog/.authors.yml
@@ -2,4 +2,4 @@ authors:
   suneeta:
     name: Suneeta Mall
     description: Builder
-    avatar: https://github.com/suneeta-mall/
+    avatar: /resources/me.png
diff --git a/docs/blog/posts/2019-12-21-Reproducible-ml-research-n-industry.md b/docs/blog/posts/2019-12-21-Reproducible-ml-research-n-industry.md
index 9e712f2..5b484fd 100644
--- a/docs/blog/posts/2019-12-21-Reproducible-ml-research-n-industry.md
+++ b/docs/blog/posts/2019-12-21-Reproducible-ml-research-n-industry.md
@@ -1,5 +1,11 @@
 ---
-title: Reproducibility in Machine Learning - Research and Industry
+title: Reproducible ML Research in Industry
+tags:
+  - blog
+  - data-science
+  - machine-learning
+  - reproducibility
+  - intermediate
 categories:
   - Machine Learning
   - AI   
@@ -116,7 +122,7 @@ The importance of reproducibility is increasingly getting recognized since [Natu
 As per this survey report, 70% of researchers have failed to reproduce another scientist's experiments, and 
 more than 50% have failed to reproduce their own experiments. With more than half of participating scientist agreeing to 
 the presence of reproducibility crisis is indeed very real. Dr. Joelle Pineau, an Associate Professor at McGill University and lead for 
-Facebook’s Artificial Intelligence Research lab, covered the reproducibility crisis in her talk at 
+Facebook's Artificial Intelligence Research lab, covered the reproducibility crisis in her talk at 
 International Conference on Learning Representations (ICLR) 2018 [you tube][jp_talk]. She is determined to nip  
 this crisis in bud from AI research<sup>[src][nature_jp]</sup>. It's not just her, several AI research groups are coming up with measures to
 ensure reproducibility (example below):
@@ -174,7 +180,7 @@ Extensibility is essential to utilizing ML outputs for consumption. As it is, ra
   
 ### 4. Data harvesting
 
->The world’s most valuable resource is no longer oil, but data! <sub>- [economist.com][imp_data]</sub>
+>The world's most valuable resource is no longer oil, but data! <sub>- [economist.com][imp_data]</sub>
 
 To train a successful ML algorithm large dataset is mostly needed - this is especially true for deep-learning. 
 Obtaining large volumes of training data, however, is not always easy - it can be quite expensive. In some cases 
@@ -218,7 +224,7 @@ But these efficiencies in floating-point computations both at CPU & GPU level co
 - CPU
 
 >Using Intra-ops (within an operation) and inter-ops (amongst multiple operations) parallelism on CPU can sometimes give different results on each run. One such example is using OpenMP for (intra-ops) parallelization. See this excellent talk titled
->"Corden’s Consistency of Floating Point Results or Why doesn’t my application always give"  [Corden 2018][corden] for more in-depth insight into this. Also see wandering precision [blog][nag].
+>"Corden's Consistency of Floating Point Results or Why doesn't my application always give"  [Corden 2018][corden] for more in-depth insight into this. Also see wandering precision [blog][nag].
 
 - GPU
 
@@ -230,7 +236,7 @@ But these efficiencies in floating-point computations both at CPU & GPU level co
 > Changing GPU architecture may lead to different results too. The differences in SEM, or architecture-specific optimizations 
 > are a couple of reasons why the differences may arise.
 
-See [Corden's Consistency of Floating-Point Results or Why doesn’t my application always give the same answer][corden] for more details.
+See [Corden's Consistency of Floating-Point Results or Why doesn't my application always give the same answer][corden] for more details.
  
 ### 2. Software
 
@@ -326,7 +332,7 @@ paper on this topic is [here][cl_paper].
 *Figure 10: Top features - Dresner Advisory Services Data Science and Machine Learning [Market Study]*
 
 In fact, Continual learning is so recognized that support for easy iteration & continuous improvement were the top two
-features industry voted as their main focus with ML as per Dresner Advisory Services’6th annual 2019 Data Science and Machine Learning [Market Study] (see figure 10).
+features industry voted as their main focus with ML as per Dresner Advisory Services'6th annual 2019 Data Science and Machine Learning [Market Study] (see figure 10).
 
 
 ---
diff --git a/docs/blog/posts/2019-12-22-Reproducible-ml-tensorflow.md b/docs/blog/posts/2019-12-22-Reproducible-ml-tensorflow.md
index e1650cb..66e54be 100644
--- a/docs/blog/posts/2019-12-22-Reproducible-ml-tensorflow.md
+++ b/docs/blog/posts/2019-12-22-Reproducible-ml-tensorflow.md
@@ -1,5 +1,12 @@
 ---
-title: Realizing reproducible Machine Learning - with Tensorflow
+title: Reproducible ML with TensorFlow
+tags:
+  - blog
+  - data-science
+  - machine-learning
+  - tensorflow
+  - reproducibility
+  - intermediate
 categories:
   - Machine Learning
   - AI   
@@ -63,7 +70,7 @@ These are:
 > Besides, when dealing with floating points, the issues related to [overflow and underflow][fp_over_under] are expected. 
 > This just adds to the complexity.  
 
-- Dependent library’s behavior aware 
+- Dependent library's behavior aware 
  
 > As discussed in the software section of `Challenges in realizing reproducible ML` in [Part 1], some routines of ML libraries 
 > do not guarantee reproducibility. For instance,  NVIDIA's CUDA based deep learning library [cudnn][cudnn_repo].
diff --git a/docs/blog/posts/2019-12-23-Reproducible-ml-pipeline-k8s.md b/docs/blog/posts/2019-12-23-Reproducible-ml-pipeline-k8s.md
index 97093fa..c74a56a 100644
--- a/docs/blog/posts/2019-12-23-Reproducible-ml-pipeline-k8s.md
+++ b/docs/blog/posts/2019-12-23-Reproducible-ml-pipeline-k8s.md
@@ -8,6 +8,13 @@ categories:
 date: 2019-12-23
 authors:
   - suneeta
+tags:
+  - blog
+  - kubernetes
+  - k8s
+  - machine-learning
+  - reproducibility
+  - intermediate
 ---
 
 # End-to-end reproducible Machine Learning pipelines on Kubernetes
diff --git a/docs/blog/posts/2021-03-14-wth-who-killed-my-pod.md b/docs/blog/posts/2021-03-14-wth-who-killed-my-pod.md
index 3313b00..bc0b5fd 100644
--- a/docs/blog/posts/2021-03-14-wth-who-killed-my-pod.md
+++ b/docs/blog/posts/2021-03-14-wth-who-killed-my-pod.md
@@ -381,7 +381,7 @@ Let's look at solving the over-commit first and see what level of fixes it provi
 
 So far, we have concluded over-commitment is a problem. Well, as discussed previously, it's a feature (of both kernel & kube) apparently!
 
-![](https://memegenerator.net/img/instances/80565312/its-not-a-bug-its-a-feature.jpg)
+![](https://memecreator.org/static/images/memes/4777431.jpg)
 
 Kernel uses the "extendability" of virtual addressing to over-commit. The kernel settings `vm.overcommit_memory` and 
 `vm.overcommit_ratio` is specially designed to controlling this capability. For more info, see [here][problem with overcommit].
diff --git a/docs/blog/posts/2021-12-31-data-in-deep-learning.md b/docs/blog/posts/2021-12-31-data-in-deep-learning.md
index 374d4ac..fa9a0e3 100644
--- a/docs/blog/posts/2021-12-31-data-in-deep-learning.md
+++ b/docs/blog/posts/2021-12-31-data-in-deep-learning.md
@@ -1,5 +1,11 @@
 ---
-title: Review of recent advances in dealing with data size challenges in Deep Learning
+title: Data in Deep Learning
+tags:
+  - blog
+  - deep-learning
+  - machine-learning
+  - data-science
+  - advanced
 categories:
   - Machine Learning
   - AI
@@ -153,7 +159,7 @@ If we look at humans are learning machines, they have infinite data at their dis
 1.  Proximity: Tendency to perceive objects or shapes that are close to one another as forming a group. 
 2.  Similarity: Tendency to group objects if physical resemblance e.g. shape, pattern, color, etc. is present. 
 3.  Closure: Tendency to see complete figures/forms even if what is present in the image is incomplete. 
-4.  Symmetry: Tendency to ‘see’ objects as symmetrical and forming around a center point. 50 
+4.  Symmetry: Tendency to 'see' objects as symmetrical and forming around a center point. 50 
 5.  Common fate: Tendency to associate similar movement as part of a common motion. 
 6.  Continuity: Tendency to perceive each object as a single uninterrupted i.e. continuous object 
 7.  Good Gestalt: Tendency to group together if a regular, simple, and orderly pattern can be formed 
@@ -251,7 +257,7 @@ Compression refers to a broad range of data filtering and compression techniques
 ### 2.1. X-shot learning: How many are enough?
 The troubles of high computational cost and long training times due to an increase in the dataset have led to the development of training by a few shot strategies. The intuition behind this approach is to take a model and guide it to learn to perform a new task only by looking at a few samples [11]. The concept of transfer learning is implicitly applied in this approach. This line of investigation started with training new tasks by using only a few (handful) samples and explored an extreme case of one-shot training i.e. learning new tasks from only one sample [12],[13].
 
-Recently an interesting mega-extreme approach of shot-based learning has emerged - `‘Less Than One’-Shot Learning` a.k.a LO Shot learning [11]. This approach utilizes soft label concepts and seeks to merge hard label N class samples into M samples where M < N and thus the name less than one! LO Shot-based techniques are a form of data compression technique and may feel very similar to the MixUp technique discussed earlier. However, LO Shot contrary to a convex combination of samples as in Mixup, exploits distance weighted k-Nearest Neighbours technique to infer the soft labels. Their algorithm termed `distance-weighted soft-label prototype k-Nearest Neighbours (SLaPkNN)` essentially takes the sum of the label vectors of the k-nearest prototypes to target point x, with each prototype weighted inversely proportional to its distance from x. The following figure shows 4 class datasets are merged into 2 samples using SLaPkNN.
+Recently an interesting mega-extreme approach of shot-based learning has emerged - `'Less Than One'-Shot Learning` a.k.a LO Shot learning [11]. This approach utilizes soft label concepts and seeks to merge hard label N class samples into M samples where M < N and thus the name less than one! LO Shot-based techniques are a form of data compression technique and may feel very similar to the MixUp technique discussed earlier. However, LO Shot contrary to a convex combination of samples as in Mixup, exploits distance weighted k-Nearest Neighbours technique to infer the soft labels. Their algorithm termed `distance-weighted soft-label prototype k-Nearest Neighbours (SLaPkNN)` essentially takes the sum of the label vectors of the k-nearest prototypes to target point x, with each prototype weighted inversely proportional to its distance from x. The following figure shows 4 class datasets are merged into 2 samples using SLaPkNN.
 
 >![](../../resources/data-centric-ai/LO-Shot.jpeg)
 *Figure LO-Shot: LO Shot splitting 4 class space into 2 points [11].*
@@ -275,7 +281,7 @@ In deep learning, using a similar concept, a lighter-weight DL model can be used
 
 #### 2.2.2 Example forgetting
 
-An investigation [14] reported that some samples once learned are never forgotten and exhibit the same behavior across various training parameters and hyperparameters. There are other classes of samples that are forgotten. The forgetting event was defined as when the model prediction regresses in the subsequent epoch. Both qualitative and qualitative (see fig 6 and 7) analysis into such forgotten samples indicated noisy labels, images with “uncommon” visually complicated features were the main reasons for example forgetting.
+An investigation [14] reported that some samples once learned are never forgotten and exhibit the same behavior across various training parameters and hyperparameters. There are other classes of samples that are forgotten. The forgetting event was defined as when the model prediction regresses in the subsequent epoch. Both qualitative and qualitative (see fig 6 and 7) analysis into such forgotten samples indicated noisy labels, images with "uncommon" visually complicated features were the main reasons for example forgetting.
 
 
 >![w](../../resources/data-centric-ai/forgetting_stats.jpeg)
@@ -323,7 +329,7 @@ I am very curious to find out how mixup impacts the GraNd scores given it shown
 The results from this study are shown in the fig above. Noticeably high pruning is not fruititious even with this approach despite how well it's doing on CIFAR-10 and 100 datasets. Are we retaining the data distribution when we drop large samples? Mostly not and that is only reasoning that makes sense. And we circle back to how much pruning is enough? Is that network dependent or more a property of data and its distribution? This study [21] claims that GradND and EL2N scores, when averaged over multiple initializations or training trajectories remove dependence on specific weights/networks, presenting a more compressed dataset. If this assertion holds in reality, in my view, this is a very promising finding easing the data-related challenges of DL.
 
 
-What's more fascinating about this work is that it sheds light on how the underlying data distribution shapes the training dynamics. This has been amiss until now. Of particular interest is identifying subspaces of the model’s data representation that are relatively stable over the training.
+What's more fascinating about this work is that it sheds light on how the underlying data distribution shapes the training dynamics. This has been amiss until now. Of particular interest is identifying subspaces of the model's data representation that are relatively stable over the training.
 
 ### 2.3. Distillation
 
@@ -417,10 +423,10 @@ In summary, the last four years have been incredibly exciting for data in DL spa
 6. Transfer Learning. [http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.146.1515&rep=rep1&type=pdf](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.146.1515&rep=rep1&type=pdf)
 7. Zhang, Hongyi, Moustapha Cisse, Yann N. Dauphin, and David Lopez-Paz. “Mixup: Beyond Empirical Risk Minimization,” October 2017. [https://arxiv.org/abs/1710.09412](https://arxiv.org/abs/1710.09412).
 8. [1812.01187] Bag of Tricks for Image Classification with Convolutional Neural Networks. Accessed December 30, 2021. [https://arxiv.org/abs/1812.01187](https://arxiv.org/abs/1812.01187).
-9. [2009.08449] ’Less Than One’-Shot Learning: Learning N Classes From M < N Samples. Accessed January 5, 2022. [https://arxiv.org/abs/2009.08449](https://arxiv.org/abs/2009.08449).
+9. [2009.08449] 'Less Than One'-Shot Learning: Learning N Classes From M < N Samples. Accessed January 5, 2022. [https://arxiv.org/abs/2009.08449](https://arxiv.org/abs/2009.08449).
 10. [1512.00567] Rethinking the Inception Architecture for Computer Vision. Accessed January 5, 2022. [https://arxiv.org/abs/1512.00567](https://arxiv.org/abs/1512.00567).
 11. [1904.05046] Generalizing from a Few Examples: A Survey on Few-Shot Learning. Accessed January 5, 2022. [https://arxiv.org/abs/1904.05046](https://arxiv.org/abs/1904.05046).
-12. Li Fei-Fei, R. Fergus and P. Perona, “One-shot learning of object categories,” in IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 28, no. 4, pp. 594–611, April 2006, doi: 10.1109/TPAMI.2006.79. [https://ieeexplore.ieee.org/document/1597116](https://ieeexplore.ieee.org/document/1597116)
+12. Li Fei-Fei, R. Fergus and P. Perona, "One-shot learning of object categories," in IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 28, no. 4, pp. 594–611, April 2006, doi: 10.1109/TPAMI.2006.79. [https://ieeexplore.ieee.org/document/1597116](https://ieeexplore.ieee.org/document/1597116)
 13. [1606.04080] Matching Networks for One Shot Learning. Accessed January 5, 2022. [https://arxiv.org/abs/1606.04080](https://arxiv.org/abs/1606.04080).
 14. [1812.05159] An Empirical Study of Example Forgetting during Deep Neural Network Learning. Accessed December 29, 2021. [https://arxiv.org/abs/1812.05159](https://arxiv.org/abs/1812.05159).
 15. [1906.11829] Selection via Proxy: Efficient Data Selection for Deep Learning. Accessed December 29, 2021. [https://arxiv.org/abs/1906.11829](https://arxiv.org/abs/1906.11829).
@@ -432,7 +438,7 @@ In summary, the last four years have been incredibly exciting for data in DL spa
 21. [2107.07075] Deep Learning on a Data Diet: Finding Important Examples Early in Training. Accessed December 10, 2021. [https://arxiv.org/abs/2107.07075](https://arxiv.org/abs/2107.07075).
 22. [2111.06377] Masked Autoencoders Are Scalable Vision Learners. Accessed January 5, 2022. [https://arxiv.org/abs/2111.06377](https://arxiv.org/abs/2111.06377).
 23. [1802.03426] UMAP: Uniform Manifold Approximation and Projection for Dimension Reduction. Accessed January 5, 2022. 23. [https://arxiv.org/abs/1802.03426](https://arxiv.org/abs/1802.03426).
-24. Maaten, Laurens van der and Geoffrey E. Hinton. “Visualizing Data using t-SNE.” Journal of Machine Learning Research 9 (2008): 2579–2605. [https://www.jmlr.org/papers/volume9/vandermaaten08a/vandermaaten08a.pdf](https://www.jmlr.org/papers/volume9/vandermaaten08a/vandermaaten08a.pdf)
+24. Maaten, Laurens van der and Geoffrey E. Hinton. "Visualizing Data using t-SNE." Journal of Machine Learning Research 9 (2008): 2579–2605. [https://www.jmlr.org/papers/volume9/vandermaaten08a/vandermaaten08a.pdf](https://www.jmlr.org/papers/volume9/vandermaaten08a/vandermaaten08a.pdf)
 25. [2107.02331] Mind Your Outliers! Investigating the Negative Impact of Outliers on Active Learning for Visual Question Answering.” Accessed January 8, 2022. [https://arxiv.org/abs/2107.02331](https://arxiv.org/abs/2107.02331)
 
 
diff --git a/docs/blog/posts/2022-03-15-hydra-pydantic-config-management-for-training-application.md b/docs/blog/posts/2022-03-15-hydra-pydantic-config-management-for-training-application.md
index bbc798c..453370b 100644
--- a/docs/blog/posts/2022-03-15-hydra-pydantic-config-management-for-training-application.md
+++ b/docs/blog/posts/2022-03-15-hydra-pydantic-config-management-for-training-application.md
@@ -1,5 +1,12 @@
 ---
-title: Pydra - Pydantic and Hydra for configuration management of model training experiments
+title: Hydra Pydantic Config Management
+tags:
+  - blog
+  - python
+  - hydra
+  - pydantic
+  - machine-learning
+  - intermediate
 categories:
   - Machine Learning
   - AI
diff --git a/docs/blog/posts/2022-05-15-confident-learning-clean-data.md b/docs/blog/posts/2022-05-15-confident-learning-clean-data.md
index 3313d7c..a1c72cc 100644
--- a/docs/blog/posts/2022-05-15-confident-learning-clean-data.md
+++ b/docs/blog/posts/2022-05-15-confident-learning-clean-data.md
@@ -1,5 +1,11 @@
 ---
-title: "Confident Learning: Label errors are imperative! So what can you do?"
+title: Confident Learning and Clean Data
+tags:
+  - blog
+  - data-science
+  - machine-learning
+  - clean-lab
+  - intermediate
 categories:
   - Machine Learning
   - AI
@@ -49,10 +55,10 @@ Let's first look at some of the reasons why errors in the labels may be present.
 There is a very interesting work by [Rebecca Crowley] where she provides a detailed chart of a range of reasons why an object (of interest) may be missed while searching in a scene or also why a wrong final decision may be made by them [4]. Some directly impacting labeling in my view are:
 
 1. **Search Satisficing**: The tendency to call off a search once something has been found, leading to premature stopping, thus increasing the chance of missing annotations[4]. This more applies to scenarios where more than one annotation is needed. For example, multi-label or segmentation annotation (dog and pen are in the image but the labeler only annotates for the dog and does not spend enough time to spot the pen and capture in labels).
-2. **Overconfidence & Under-confidence**: This type of labeling error relates to one’s feeling-of-knowing [4] that is over or underestimated.
+2. **Overconfidence & Under-confidence**: This type of labeling error relates to one's feeling-of-knowing [4] that is over or underestimated.
 3. **Availability**: There is an implicit bias in annotating it wrongly if something is frequently occurring or rarely occurring  [4]. It is particularly true for challenging labeling tasks. For instance, if the cancer prevalence rate in a location is 0.01%, then the labeler, when labeling a not-so-straightforward case, is more likely to mark a non-cancer than cancer.
 4. **Anchoring/Confirmation bias**: When a labeler makes a pre-emptive decision [4] about a labeling task outcome and then looks for information to support that decision. For example, believing they are looking at a cancerous case, they start to search for abnormality in the image to support the finding that this case is cancer. In this unfair search/decision process, they are more likely to make mistakes.
-5. **Gambler’s Fallacy**: When they are encountered with a repeated pattern of similar cases, then they are likely to deviate and favor an outcome that breaks that pattern [4].
+5. **Gambler's Fallacy**: When they are encountered with a repeated pattern of similar cases, then they are likely to deviate and favor an outcome that breaks that pattern [4].
 6. Amongst all these, **Cognitive Overload** is also a valid and fair reason for errors in labels.
 
 
@@ -223,7 +229,7 @@ I am not sure if I am following how to interpret the [pair-wise count for multi-
 
 
 ## Conclusion
-As discussed in this post, there are several reasons why label errors are unavoidable. While no small-efforts are required to minimize the errors in the dataset, management of the errors in the dataset is also warranted. The management to find noisy data, out of distribution data, or data that represents a systematic flaw (software/tooling issues or issues in the understanding of a concept that defines the target class). Approaches like model-in-loop, or additional information like ontology to find such noises or errors in the dataset are effective techniques. Confident learning provides a solid foundation for analyzing a dataset of noisy or OOD samples — a technique that’s quite effective for multi-class approaches, with the evolving support for multi-label classification. Now, on to cleaning the dataset! Happy cleaning!
+As discussed in this post, there are several reasons why label errors are unavoidable. While no small-efforts are required to minimize the errors in the dataset, management of the errors in the dataset is also warranted. The management to find noisy data, out of distribution data, or data that represents a systematic flaw (software/tooling issues or issues in the understanding of a concept that defines the target class). Approaches like model-in-loop, or additional information like ontology to find such noises or errors in the dataset are effective techniques. Confident learning provides a solid foundation for analyzing a dataset of noisy or OOD samples — a technique that's quite effective for multi-class approaches, with the evolving support for multi-label classification. Now, on to cleaning the dataset! Happy cleaning!
 
 
 
diff --git a/docs/blog/posts/2022-06-09-feature_analysis_tsne_vs_umap.md b/docs/blog/posts/2022-06-09-feature_analysis_tsne_vs_umap.md
index 8ab18aa..0aa300e 100644
--- a/docs/blog/posts/2022-06-09-feature_analysis_tsne_vs_umap.md
+++ b/docs/blog/posts/2022-06-09-feature_analysis_tsne_vs_umap.md
@@ -1,5 +1,5 @@
 ---
-title: "Review and comparison of two manifold learning algorithms: t-SNE and UMAP"
+title: Feature Analysis - t-SNE vs UMAP
 categories:
   - Machine Learning
   - AI
@@ -13,6 +13,13 @@ date: 2022-06-09
 pin: true
 authors:
   - suneeta
+tags:
+  - blog
+  - feature-analysis
+  - data-science
+  - tsne
+  - umap
+  - intermediate
 ---
 
 # Review and comparison of two manifold learning algorithms: t-SNE and UMAP
diff --git a/docs/blog/posts/2023-11-15-Curious-Cassie.md b/docs/blog/posts/2023-11-15-Curious-Cassie.md
index b032ff3..f1764a5 100644
--- a/docs/blog/posts/2023-11-15-Curious-Cassie.md
+++ b/docs/blog/posts/2023-11-15-Curious-Cassie.md
@@ -9,6 +9,11 @@ authors:
 links:
   - blog/2023/01/07/chatgpt-vs-me-as-a-childrens-author/
   - projects/curious_cassie/
+tags:
+  - blog
+  - children-book
+  - children-literature
+  - beginner
 ---
 
 # Launch of Curious Cassie's Beach Ride Quest
@@ -21,7 +26,7 @@ Join Cassie, Caleb, and their mom on an extraordinary adventure to the beach. Al
 
 **Title**: Curious Cassie's Beach Ride Quest: A Celebration of Isaac Newton's Discoveries
 
-**Genre**: Children’s Fiction (picture books, junior fiction)
+**Genre**: Children's Fiction (picture books, junior fiction)
 
 **Publication Date**: 2023-11-12
 
diff --git a/docs/blog/posts/2024-05-30-Deep-learning-at-scale.md b/docs/blog/posts/2024-05-30-Deep-learning-at-scale.md
index 9a5ecfb..cfd85bc 100644
--- a/docs/blog/posts/2024-05-30-Deep-learning-at-scale.md
+++ b/docs/blog/posts/2024-05-30-Deep-learning-at-scale.md
@@ -1,11 +1,16 @@
 ---
-title: "Launch of Deep Learning at Scale - An O'Reilly Book"
+title: Deep Learning at Scale
+date: 2024-05-30
+tags:
+  - blog
+  - deep-learning
+  - machine-learning
+  - advanced
 categories:
   - Machine Learning
   - AI
   - Deep Learning
   - Book
-date: 2024-05-30
 display_date: May 2024
 authors:
   - suneeta
@@ -17,6 +22,8 @@ I am thrilled to announce the release of "Deep Learning at Scale: At the Interse
 
 > "Deep Learning at Scale: At the Intersection of Hardware, Software, and Data" (O'Reilly) illustrates complex concepts of full-stack deep learning and reinforces them through hands-on exercises to equip you with tools and techniques to scale your project. Scaling efforts are only beneficial when they are effective and efficient. To that end, this guide explains the intricate concepts and techniques that will help you scale effectively and efficiently.
 
+[![Deep Learning at Scale - An O'reilly Book](../../resources/books/15173-2121843.jpg)](https://oreillymedia.pxf.io/c/5668688/2121843/15173)
+
 ## **Order your copy today**
 
 To order your copy, use the following links based on your preferred format:
@@ -30,7 +37,9 @@ To order your copy, use the following links based on your preferred format:
 Alternatively, you can access the book using the 30-day trial link:
 
 !!! note "30 Days trial access by O'Reilly Media"
-[![](https://a.impactradius-go.com/display-ad/15173-2121843)](https://oreillymedia.pxf.io/c/5668688/2121843/15173)
+[30 days trial - :fontawesome-solid-briefcase:](https://oreillymedia.pxf.io/c/5668688/2121843/15173)
+
+
 
 ## More info
 
diff --git a/docs/blog/posts/2025-05-10-cassie-2.0.md b/docs/blog/posts/2025-05-10-cassie-2.0.md
new file mode 100644
index 0000000..2837bba
--- /dev/null
+++ b/docs/blog/posts/2025-05-10-cassie-2.0.md
@@ -0,0 +1,106 @@
+---
+title: "Curious Cassie 2.0: Revolutionizing Children's Education Through AI-Powered Storytelling"
+categories:
+  - Generative AI
+  - Book
+  - LLM
+  - Curious Cassie
+date: 2025-05-10
+pin: true
+authors:
+  - suneeta
+---
+
+# Curious Cassie 2.0: Revolutionizing Children's Education Through AI-Powered Storytelling
+
+## Table of Contents
+- [Curious Cassie 2.0: Revolutionizing Children's Education Through AI-Powered Storytelling](#curious-cassie-20-revolutionizing-childrens-education-through-ai-powered-storytelling)
+  - [Table of Contents](#table-of-contents)
+  - [The Genesis of a Vision](#the-genesis-of-a-vision)
+  - [Reigniting the Vision with AI](#reigniting-the-vision-with-ai)
+  - [The Transformative Potential of Generative AI in Children's Literature](#the-transformative-potential-of-generative-ai-in-childrens-literature)
+  - [Immersive Multi-Sensory Storytelling](#immersive-multi-sensory-storytelling)
+  - [Current Limitations and Future Directions](#current-limitations-and-future-directions)
+  - [The Path Forward](#the-path-forward)
+  - [References](#references)
+
+## The Genesis of a Vision
+
+In 2022, I embarked on a mission that had long captivated my imagination: creating compelling narratives designed to inspire critical thinking in young minds ages 5-10. This endeavor was born from a profound concern—our digital age increasingly subjects children to passive entertainment, systematically diminishing their innate curiosity and imaginative capabilities. My solution? Develop engaging stories that weave the journeys of eminent scientists and philosophers into accessible narratives, transforming learning into an active, participatory experience.
+
+This vision materialized as the "Curious Cassie" book series, with each installment honoring a celebrated scientist by integrating their discoveries into narratives that make learning both enjoyable and engaging. I began with ["Curious Cassie's Beach Ride Quest: A Celebration of Isaac Newton's Discoveries"](https://www.amazon.com.au/Curious-Cassies-beach-ride-quest/dp/0646869868), choosing self-publication after encountering the traditional publishing industry's protracted timelines. This path revealed the formidable challenges novice authors face, particularly those writing for younger audiences, and highlighted areas where I needed to evolve as a children's author.
+
+Simultaneously, I authored ["Deep Learning at Scale"](https://www.oreilly.com/library/view/deep-learning-at/9781098145279/) for O'Reilly, a technical work aimed at machine learning practitioners. This parallel experience provided invaluable insights into the transformative power of professional editorial processes. The iterative feedback cycles—critical analysis, editorial review, and meticulous proofreading—substantially elevated the manuscript's quality, underscoring the improvements needed in my self-published children's literature.
+
+Without a conventional editorial team, I relied on feedback from educational institutions and libraries to refine the "Curious Cassie" series. I recognized that various narrative elements required enhancement: storyline development, curiosity triggers, strategic suspense, and moments that evoke wonder and prompt young readers to question their surroundings. However, professional demands intervened, and this passion project entered an extended hiatus.
+
+## Reigniting the Vision with AI
+
+Today, I return with renewed determination to revitalize "Curious Cassie." My current approach leverages artificial intelligence to create an efficient publishing framework, allowing me to focus on my core passion: storytelling. By harnessing technological advancements, I aim to amplify my creative capabilities and bring Curious Cassie's adventures to life in ways that captivate and inspire young minds.
+
+## The Transformative Potential of Generative AI in Children's Literature
+
+Generative artificial intelligence is fundamentally reshaping children's literature, equipping authors with sophisticated tools that enhance storytelling craft. By leveraging breakthroughs in natural language processing and machine learning, writers can now develop dynamic narratives and character dialogues calibrated to specific age groups' comprehension levels and interests. These technologies serve as powerful creative allies, helping authors overcome creative blocks by generating contextually relevant content (Brown et al., 2020).
+
+AI-driven platforms are also revolutionizing narrative personalization. By analyzing reader interests and feedback, these systems facilitate the creation of stories that resonate deeply with children, fostering genuine engagement (Zhang et al., 2021). This personalized approach not only captivates young readers but empowers them through stories that reflect their experiences and interests.
+
+Furthermore, generative AI significantly enhances narrative refinement through simulated editorial processes that improve structure, pacing, and emotional resonance, mirroring traditional publishing's collaborative editing (Kucuk & Kucuk, 2022). This iterative feedback loop ensures polished, impactful final products that enrich the reading experience.
+
+However, integrating AI into storytelling presents distinct challenges. Ethical considerations regarding originality, authorship, and narrative homogenization could potentially limit literary diversity (Gunkel, 2018). Authors must carefully balance AI's advantages while preserving their distinctive creative voice.
+
+## Immersive Multi-Sensory Storytelling
+
+The integration of visual, auditory, and virtual elements transforms storytelling, creating immersive experiences that engage multiple sensory pathways. Visual components—illustrations and animations—enhance comprehension and emotional connection, particularly among young readers. Research demonstrates that children exposed to illustrated narratives show improved understanding and recall compared to text-only formats (Duke & Pearson, 2002; Hargreaves & North, 1999; Baker, 2013).
+
+Augmented reality (AR) and virtual reality (VR) represent the vanguard of innovative storytelling techniques. AR applications overlay digital content onto physical environments, enabling readers to explore narratives within their surroundings (Billinghurst & Duenser, 2012). VR immerses users in fully realized digital worlds, fostering empathy and emotional engagement by allowing readers to experience stories from varied perspectives (Bailenson et al., 2008).
+
+By engaging multiple sensory channels, these approaches facilitate deeper cognitive processing and stronger narrative connections, fundamentally transforming how stories are created and consumed (Gee, 2003). The evolving potential for hybrid storytelling formats promises to further enrich educational opportunities through narrative (Slater & Wilbur, 1997).
+
+This integration of diverse technologies enables the development of dynamic platforms where the 5 W's (What, When, How, Who, Where) and the 5 C's (Critical thinking, Creativity, Collaboration, Communication, and Citizenship) can be seamlessly woven into educational experiences through storytelling.
+
+## Current Limitations and Future Directions
+
+While emerging AI storytelling tools show promise, they remain in nascent stages of development. Platforms like TinyTeller AI, StoryPrompt, Sudowrite, StoryCraft AI, and AIStory offer valuable capabilities but also present limitations. Overreliance on AI-generated content may restrict exposure to diverse storytelling styles (Kim et al., 2024; Han & Cai, 2023), while collaborative AI tools may inadvertently foster dependence rather than independence in creative expression (Fan et al., 2024; Hwang, 2024).
+
+The current digital education landscape often resembles a one-sided monologue, hampering interactive learning and stifling critical thinking. By reimagining education through the lens of interactive storytelling, we can create enriching platforms that empower learners to actively participate in knowledge acquisition.
+
+## The Path Forward
+
+I am committed to revitalizing Curious Cassie with AI-enhanced, multi-dimensional storytelling experiences that not only engage young readers but encourage critical thinking about the narratives they encounter. Alongside this revival, I am developing open-source tools to streamline the storybook publishing process, assisting first-time authors in complementing their skills through AI.
+
+In an era saturated with misinformation and superficial content, empowering young minds with critical thinking skills has never been more crucial. Through the synergy of human creativity and artificial intelligence, we can transform children's literature into a powerful vehicle for intellectual growth, fostering the next generation of thoughtful, engaged thinkers.
+
+## References
+
+1. Baker, R. (2013). The Role of Audio in Learning. In J. M. Spector, D. M. Merrill, J. Van Merriënboer, & M. P. Driscoll (Eds.), Handbook of Research on Educational Communications and Technology (pp. 393-408). Springer.
+
+2. Bailenson, J. N., Beall, A. C., Blascovich, J., & Loomis, J. M. (2008). Immersive Virtual Environment Technology as a Methodological Tool for Social Psychology. In J. M. H. (Ed.), The Handbook of Social Psychology (pp. 100-124). Wiley.
+
+3. Billinghurst, M., & Duenser, A. (2012). Augmented Reality in the Classroom. In P. Z. Papadopoulos (Ed.), Augmented Reality: Principles and Practice (pp. 219-236). Springer.
+
+4. Brown, T. B., Mann, B., Ryder, N., Subbiah, M., Kaplan, J., Dhariwal, P., ... & Amodei, D. (2020). Language Models are Few-Shot Learners. Advances in Neural Information Processing Systems, 33, 1877-1901.
+
+5. Duke, N. K., & Pearson, P. D. (2002). Effective Practices for Developing Reading Comprehension. In A. E. Farstrup & S. J. Samuels (Eds.), What Research Has to Say About Reading Instruction (pp. 205-242). International Reading Association.
+
+6. Fan, L., Han, S., & Cai, J. (2024). AI-Assisted Creative Writing in Elementary Education: Benefits and Challenges. Journal of Educational Technology and Society, 27(1), 112-125.
+
+7. Gee, J. P. (2003). What Video Games Have to Teach Us About Learning and Literacy. Computers in Human Behavior, 19(1), 199-219.
+
+8. Gunkel, D. J. (2018). The Machine Question: Critical Perspectives on AI, Robots, and Ethics. MIT Press.
+
+9. Han, S., & Cai, J. (2023). TinyTeller: Personalized AI Storytelling for Early Childhood Education. In Proceedings of the International Conference on Educational Technology (pp. 78-92).
+
+10. Hargreaves, D. J., & North, A. C. (1999). The Social and Applied Psychology of Music. Oxford University Press.
+
+11. Hwang, G. J. (2024). Collaborative AI Systems in Education: Impact on Student Engagement and Learning Outcomes. Educational Technology Research and Development, 72(1), 45-62.
+
+12. Kim, J., Lee, S., & Park, H. (2024). Evaluating the Effectiveness of AI-Generated Content in Children's Literacy Development. Reading Research Quarterly, 59(2), 212-229.
+
+13. Kucuk, S., & Kucuk, U. (2022). The Role of AI in the Evolution of Creative Writing. Journal of Creative Writing Studies, 7(1), 1-15.
+
+14. Mayer, R. E. (2009). Multimedia Learning. Cambridge University Press.
+
+15. Slater, M., & Wilbur, S. (1997). A Framework for Immersive Virtual Environments (FIVE): Speculations on the Role of Presence in Virtual Environments. Presence: Teleoperators and Virtual Environments, 6(6), 603-616.
+
+16. Zhang, Y., Wang, J., & Hu, J. (2021). Personalization in Children's Literature: An AI-Driven Approach. International Journal of Child-Computer Interaction, 28, 100-110.
+
diff --git a/docs/poems/aint-no-dr-seuss.md b/docs/poems/aint-no-dr-seuss.md
index ef4c311..6b47001 100644
--- a/docs/poems/aint-no-dr-seuss.md
+++ b/docs/poems/aint-no-dr-seuss.md
@@ -24,7 +24,7 @@ display_date: April 2010
 ## Inspiration
 Who else but Dr. Seuss
 
-![](../../resources/dr-seuss-quote-be-who-you-are.jpg)
+![](../resources/dr-seuss-quote-be-who-you-are.jpg)
 
 
 
diff --git a/docs/poems/life-of-ai-engineer.md b/docs/poems/life-of-ai-engineer.md
index 8e48830..778716f 100644
--- a/docs/poems/life-of-ai-engineer.md
+++ b/docs/poems/life-of-ai-engineer.md
@@ -1,5 +1,10 @@
 ---
-title: Life of AI Engineers
+title: Life of AI Engineer
+tags:
+  - poem
+  - machine-learning
+  - ai
+  - beginner
 date: 2024-06-16
 display_date: June 2024
 ---
@@ -38,7 +43,7 @@ display_date: June 2024
 <center>Life's a loop you never unwind</center>
 <center><br></center>
 <center>Coding in the dark</center>
-<center>My cluster’s got the spark</center>
+<center>My cluster's got the spark</center>
 <center>I debug through the night</center>
 <center>All my errors in sight</center>
 <center><br></center>
@@ -61,7 +66,7 @@ display_date: June 2024
 <center><br></center><center>My model's acting kinda weird</center>
 <center>The Output's also disappeared</center>
 <center>CUDA stack my solo guide</center>
-<center>It's a freakin’ rollercoaster ride</center>
+<center>It's a freakin' rollercoaster ride</center>
 <center><br></center>
 <center>(Ooh, the Life of AI Engineers!) </center>
 <center><br></center>
@@ -75,8 +80,8 @@ display_date: June 2024
 <center><br></center>
 <center>Coffee keeps me Oh so sane</center>
 <center>Building neural network lane</center>
-<center>My Network’s going kinda slow</center>
-<center>But, I’m training like a pro</center>
+<center>My Network's going kinda slow</center>
+<center>But, I'm training like a pro</center>
 <center><br></center>
 <center>Errors to the left</center>
 <center>Tanking curves to the right</center>
diff --git a/docs/poems/singularity.md b/docs/poems/singularity.md
index e740009..57a097e 100644
--- a/docs/poems/singularity.md
+++ b/docs/poems/singularity.md
@@ -1,5 +1,10 @@
 ---
 title: Singularity
+tags:
+  - poem
+  - machine-learning
+  - ai
+  - intermediate
 date: 2024-09-17
 display_date: Sept 2024
 ---
@@ -18,24 +23,24 @@ display_date: Sept 2024
 <center>But you have got it all,</center>
 
 <center>Believe it! Feel it!</center>
-<center>The power’s inside!</center>
+<center>The power's inside!</center>
 <center>Believe it! Feel it!</center>
-<center>Without it, you’re denied!</center>
+<center>Without it, you're denied!</center>
 
 <center>Wear your doubts, Own your fears,</center>
 <center>Like shiny armours, stronger each year</center>
-<center>Enough is enough, and you know it’s right!</center>
-<center>Show up now, it’ll be all right!</center>
+<center>Enough is enough, and you know it's right!</center>
+<center>Show up now, it'll be all right!</center>
 
 <center>"Fake it till you make it?" — that's just a lie,</center>
 <center>A hollow thought, no reason why.</center>
-<center>Where’s your truth, your inner gleam?</center>
+<center>Where's your truth, your inner gleam?</center>
 <center>Your singularity?</center>
 
 <center>Believe it! Feel it! Find it all, within!</center>
 <center>Come hell or high, You will do all right!</center>
 <center>Feel that faith, you are nothing without it!</center>
-<center>Show up now, it’ll be all right!</center>
+<center>Show up now, it'll be all right!</center>
 
 <center>Enough is enough!</center>
 <center>Wear your doubts,</center>
@@ -43,17 +48,17 @@ display_date: Sept 2024
 <center>Face the horizon, no more tears.</center>
 
 <center>The wait is over!</center>
-<center>It’s time to rise!</center>
+<center>It's time to rise!</center>
 <center>[emphasis] Like a phoenix! through the skies,</center>
 <center>With your fears, no more your tears.</center>
 
 <center>Gather the ashes, gather the flames,</center>
 <center>Your ambition calls your name.</center>
-<center>It’s now or never, so face your fear,</center>
+<center>It's now or never, so face your fear,</center>
 <center>Let your creed burn, bright and clear!</center>
 
-<center>Feel it, believe it, The strength’s within!</center>
-<center>Come hell or high,  you’ll take it in stride!</center>
+<center>Feel it, believe it, The strength's within!</center>
+<center>Come hell or high,  you'll take it in stride!</center>
 
 <center>Wear your doubts, Own your fears,</center>
 <center>Channel that fire, feel it sear!</center>
@@ -64,7 +69,7 @@ display_date: Sept 2024
 <center>Find it all, within!</center>
 
 <center>Step by step, on the grind,</center>
-<center>With every move, strength you’ll find.</center>
+<center>With every move, strength you'll find.</center>
 <center>Assaying, slaying, climbing high,</center>
 <center>Chasing the light, through the endless sky!</center>
 
@@ -90,7 +95,7 @@ display_date: Sept 2024
 <center>Melt it down, refine your soul,</center>
 <center>This is you—turn it into gold!</center>
 
-<center>Rise up now, it’s gonna be fine!</center>
+<center>Rise up now, it's gonna be fine!</center>
 <center>Like a phoenix! through the skies,</center>
 
 
diff --git a/docs/projects/curious_cassie.md b/docs/projects/curious_cassie.md
index 18ae176..a592f74 100644
--- a/docs/projects/curious_cassie.md
+++ b/docs/projects/curious_cassie.md
@@ -3,6 +3,11 @@ title: "Curious Cassie Books"
 categories:
     - Children's Chapter Books
     - Curious Cassie
+tags:
+  - project
+  - children-book
+  - children-literature
+  - beginner
 ---
 
 # Curious Cassie Book Series
@@ -24,7 +29,7 @@ The important message that Jaya and Suneeta want to convey is:
 <center><br></center>
 <center>Never stop asking,</center>
 <center>Keep on believing,</center>
-<center>It’s all about learning,</center>
+<center>It's all about learning,</center>
 <center>Just keep on wondering,</center>
 <center>Passionately pursuing,</center>
 <center>All your Curiosities!</center>
@@ -53,7 +58,7 @@ You can find Jaya on:
 
 **Title**: Curious Cassie's Beach Ride Quest: A Celebration of Isaac Newton's Discoveries 
 
-**Genre**: Children’s Fiction (picture books, junior fiction)
+**Genre**: Children's Fiction (picture books, junior fiction)
 
 **Publication date**: 11-12-2022
 
diff --git a/docs/projects/feature_analysis.md b/docs/projects/feature_analysis.md
index 100d3a2..c4cdbbd 100644
--- a/docs/projects/feature_analysis.md
+++ b/docs/projects/feature_analysis.md
@@ -1,5 +1,11 @@
 ---
-title: "Analysis of features using t-SNE, UMAP and Captum"
+title: Feature Analysis
+tags:
+  - project
+  - feature-analysis
+  - data-science
+  - machine-learning
+  - intermediate
 source: https://github.com/suneeta-mall/feature_analysis
 demo: https://github.com/suneeta-mall/feature_analysis/blob/master/docs/MNIST_TSNE_vs_UMAP.ipynb
 date: 2022-06-9
diff --git a/docs/projects/oreilly_deep_learning_at_scale.md b/docs/projects/oreilly_deep_learning_at_scale.md
index 6477e11..a2f47cb 100644
--- a/docs/projects/oreilly_deep_learning_at_scale.md
+++ b/docs/projects/oreilly_deep_learning_at_scale.md
@@ -1,5 +1,10 @@
 ---
-title: "Deep Learning at Scale - An O'reilly Book"
+title: Deep Learning at Scale
+tags:
+  - project
+  - deep-learning
+  - machine-learning
+  - advanced
 categories:
     - Deep Learning
     - AI
@@ -12,7 +17,7 @@ display_date: May 2024
 
 Bringing a deep-learning project into production at scale is quite challenging. To successfully scale your project, a foundational understanding of full stack deep learning, including the knowledge that lies at the intersection of hardware, software, data, and algorithms, is required.
 
-![](https://a.impactradius-go.com/display-ad/15173-2121843)
+![Deep Learning at Scale - An O'reilly Book](../../resources/books/15173-2121843.jpg)
 
 
 This book "Deep Learning at Scale: At the Intersection of Hardware, Software, and Data" illustrates complex concepts of full stack deep learning and reinforces them through hands-on exercises to arm you with tools and techniques to scale your project. A scaling effort is only beneficial when it's effective and efficient. To that end, this guide explains the intricate concepts and techniques that will help you scale effectively and efficiently.
@@ -51,8 +56,4 @@ To order your copy, use the following links as per your choice of format:
 
 Alternatively, you can access the book using 30 days trial link:
 !!! note "30 Days trial access by O'reilly media"
-[![](https://a.impactradius-go.com/display-ad/15173-2121843)](https://oreillymedia.pxf.io/c/5668688/2121843/15173)
-
-
-
-
+[30 days trial - :fontawesome-solid-briefcase:](https://oreillymedia.pxf.io/c/5668688/2121843/15173)
diff --git a/docs/resources/.DS_Store b/docs/resources/.DS_Store
index 0ff6a2d..bb74d3c 100644
Binary files a/docs/resources/.DS_Store and b/docs/resources/.DS_Store differ
diff --git a/docs/resources/books/15173-2121843.jpg b/docs/resources/books/15173-2121843.jpg
new file mode 100644
index 0000000..4defb94
Binary files /dev/null and b/docs/resources/books/15173-2121843.jpg differ
diff --git a/docs/resources/books/15173-2121843_icon.jpg b/docs/resources/books/15173-2121843_icon.jpg
new file mode 100644
index 0000000..7a85be0
Binary files /dev/null and b/docs/resources/books/15173-2121843_icon.jpg differ
diff --git a/docs/resources/me.png b/docs/resources/me.png
index ccf5e42..2c461de 100644
Binary files a/docs/resources/me.png and b/docs/resources/me.png differ
diff --git a/docs/robots.txt b/docs/robots.txt
new file mode 100644
index 0000000..231c186
--- /dev/null
+++ b/docs/robots.txt
@@ -0,0 +1,12 @@
+User-agent: *
+Allow: /
+
+Sitemap: https://suneeta-mall.github.io/sitemap.xml
+
+# Disallow crawling of private or temporary files
+Disallow: /.git/
+Disallow: /.github/
+Disallow: /.venv/
+Disallow: /.cache/
+Disallow: /.ruff_cache/
+Disallow: /mkdocs_recent_posts_plugin.egg-info/ 
\ No newline at end of file
diff --git a/docs/tags.md b/docs/tags.md
new file mode 100644
index 0000000..711de52
--- /dev/null
+++ b/docs/tags.md
@@ -0,0 +1,35 @@
+# Content Tags
+
+This page provides an overview of all tags used across the content. Click on any tag to see all content tagged with it.
+
+## Content Types
+- [blog](tags.md#blog) - Blog posts and articles
+- [project](tags.md#project) - Project showcases and documentation
+- [talk](tags.md#talk) - Conference talks and presentations
+- [poem](tags.md#poem) - Poetry and creative writing
+- [children-book](tags.md#children-book) - Children's literature
+
+## Topics
+- [machine-learning](tags.md#machine-learning) - Machine learning concepts and applications
+- [deep-learning](tags.md#deep-learning) - Deep learning and neural networks
+- [kubernetes](tags.md#kubernetes) - Kubernetes and container orchestration
+- [reproducibility](tags.md#reproducibility) - Reproducible research and ML pipelines
+- [data-science](tags.md#data-science) - Data science and analytics
+- [feature-analysis](tags.md#feature-analysis) - Feature analysis and visualization
+- [clean-lab](tags.md#clean-lab) - Clean Lab and data quality
+- [chatgpt](tags.md#chatgpt) - ChatGPT and AI applications
+- [children-literature](tags.md#children-literature) - Children's books and stories
+
+## Technical
+- [python](tags.md#python) - Python programming
+- [tensorflow](tags.md#tensorflow) - TensorFlow framework
+- [hydra](tags.md#hydra) - Hydra configuration
+- [pydantic](tags.md#pydantic) - Pydantic data validation
+- [tsne](tags.md#tsne) - t-SNE visualization
+- [umap](tags.md#umap) - UMAP dimensionality reduction
+- [k8s](tags.md#k8s) - Kubernetes
+
+## Experience Level
+- [beginner](tags.md#beginner) - Beginner-friendly content
+- [intermediate](tags.md#intermediate) - Intermediate level content
+- [advanced](tags.md#advanced) - Advanced topics and concepts 
\ No newline at end of file
diff --git a/docs/talks/AWS_ANZ_Commuity_day_2020.md b/docs/talks/AWS_ANZ_Commuity_day_2020.md
index 4b32aa7..d284a33 100644
--- a/docs/talks/AWS_ANZ_Commuity_day_2020.md
+++ b/docs/talks/AWS_ANZ_Commuity_day_2020.md
@@ -1,9 +1,10 @@
 ---
-title: 'AWS Community Day 2020 - Nearmap AI: The story of data curation to power deep learning'
-slides: https://www.youtube.com/watch?v=JuHBJk2uuD8
-video: https://www.youtube.com/watch?v=JuHBJk2uuD8
-date: 2020-11-18
-display_date: Nov 2020
+title: AWS Community Day 2020
+tags:
+  - talk
+  - kubernetes
+  - k8s
+  - intermediate
 ---
 
 Had the priviledge on being invited to speak at [AWS Community Day 2020] to talk about deep learning data curation:
diff --git a/docs/talks/KGC_NY_2022.md b/docs/talks/KGC_NY_2022.md
index eb03bc8..b3ab59a 100644
--- a/docs/talks/KGC_NY_2022.md
+++ b/docs/talks/KGC_NY_2022.md
@@ -1,5 +1,10 @@
 ---
-title: 'KGC 2022: Leveraging Domain Knowledge For Deep Learning Based Computer Vision'
+title: Knowledge Graph Conference 2022
+tags:
+  - talk
+  - machine-learning
+  - data-science
+  - intermediate
 slides: https://zenodo.org/record/6504617/files/Leveraging%20Domain%20Knowledge%20For%20Deep%20Learning%20Based%20Computer%20Vision.pdf?download=1
 video: https://watch.knowledgegraph.tech/videos/leveraging-domain-knowledge-for-deep-learning-based-computer-vision
 date: 2022-05-05
@@ -8,9 +13,9 @@ display_date: May 2022
 
 I had the opportunity to present recent work `Leveraging Domain Knowledge For Deep Learning Based Computer Vision` at [Knowledge Graph Conference 2022][talk]. The blurb for this talk is as following: 
 
-Deep learning models require massive amounts of data to be performed accurately. As the world is inherently interconnected, we can leverage relationships amongst identifiable objects to improve Deep Learning. For example, a shingle roof can not be a tile roof, but both are roofs. So, we set ourselves a challenge: “How can we leverage the knowledge and the relationship amongst the things we see in our world to improve our data, software systems, and the deep learning model?”. 
+Deep learning models require massive amounts of data to be performed accurately. As the world is inherently interconnected, we can leverage relationships amongst identifiable objects to improve Deep Learning. For example, a shingle roof can not be a tile roof, but both are roofs. So, we set ourselves a challenge: "How can we leverage the knowledge and the relationship amongst the things we see in our world to improve our data, software systems, and the deep learning model?"
 
-In this presentation, we share our experiences with knowledge graphs as a technique to model domain knowledge and reason about it to derive an embedding. We have leveraged these embeddings in numerous applications to build a more scalable, reliable, and efficient AI System. The applications include improving the quality and richness of our datasets, identifying gaps in annotators’ knowledge, utilizing existing data to synthesize new objects on the fly, and also increasing the efficiencies of deep learning models.
+In this presentation, we share our experiences with knowledge graphs as a technique to model domain knowledge and reason about it to derive an embedding. We have leveraged these embeddings in numerous applications to build a more scalable, reliable, and efficient AI System. The applications include improving the quality and richness of our datasets, identifying gaps in annotators' knowledge, utilizing existing data to synthesize new objects on the fly, and also increasing the efficiencies of deep learning models.
 
 >![](../../resources/talks/kgc_2022.jpg)
 
diff --git a/docs/talks/Kafka_Summit_APAC_2021.md b/docs/talks/Kafka_Summit_APAC_2021.md
index 68aad38..1ca0676 100644
--- a/docs/talks/Kafka_Summit_APAC_2021.md
+++ b/docs/talks/Kafka_Summit_APAC_2021.md
@@ -1,5 +1,10 @@
 ---
-title: 'Building More Reliable Data Pipelines for Nearmap Deep Learning Models: An Evolutionary Case Study'
+title: Kafka Summit APAC 2021
+tags:
+  - talk
+  - kubernetes
+  - k8s
+  - intermediate
 slides: https://www.dropbox.com/scl/fi/c75vjetnxys6q9je3x0n2/Kafka-Summit-APAC-Final-Samanvay-Suneeta.pptx?dl=0&rlkey=cniwh8dcuk3k4kmzlj37vrjl9
 video: https://www.dropbox.com/scl/fi/c75vjetnxys6q9je3x0n2/Kafka-Summit-APAC-Final-Samanvay-Suneeta.pptx?dl=0&rlkey=cniwh8dcuk3k4kmzlj37vrjl9
 date: 2021-07-28
diff --git a/docs/talks/KubeCon_NA_2021.md b/docs/talks/KubeCon_NA_2021.md
index 35ecd00..cf2b3eb 100644
--- a/docs/talks/KubeCon_NA_2021.md
+++ b/docs/talks/KubeCon_NA_2021.md
@@ -1,5 +1,10 @@
 ---
 title: 'KubeCon NA 2021 - Who Killed My Pod? #Whodunit'
+tags:
+  - talk
+  - kubernetes
+  - k8s
+  - intermediate
 slides: https://static.sched.com/hosted_files/kccncna2021/79/SuneetaMall_WhoKilledMyPod_KubeConNA_2021.pptx
 video: https://www.youtube.com/watch?v=eH4x5PGgDoM
 date: 2021-09-12
diff --git a/mkdocs.yml b/mkdocs.yml
index f8b255a..b254c46 100644
--- a/mkdocs.yml
+++ b/mkdocs.yml
@@ -8,165 +8,206 @@ theme:
   # logo: resources/logo.svg
   # favicon: resources/logo_large_azure.svg
   features:
-  - content.code.annotate
-  - content.code.copy
-  - content.tooltips
-  - content.tabs.link
-  - navigation.indexes
-  - navigation.instant
-  - navigation.instant.preview
-  - navigation.sections
-  - navigation.tabs
-  - navigation.tabs.sticky
-  - navigation.top
-  - navigation.tracking
-  - search.highlight
-  - search.share
-  - search.suggest
-  - toc.follow
-  - header.autohide
-  - announce.dismiss  
-  - navigation.footer  
-  - git-revision-date-localized:
-      type: date  
-      enable_creation_date: true
+    - content.code.annotate
+    - content.code.copy
+    - content.tooltips
+    - content.tabs.link
+    - navigation.indexes
+    - navigation.instant
+    - navigation.instant.preview
+    - navigation.sections
+    - navigation.tabs
+    - navigation.tabs.sticky
+    - navigation.top
+    - navigation.tracking
+    - search.highlight
+    - search.share
+    - search.suggest
+    - toc.follow
+    - header.autohide
+    - announce.dismiss
+    - navigation.footer
+    - navigation.breadcrumbs
+    - navigation.expand
+    - navigation.sections
+    - navigation.tracking
+    - navigation.top
+    - search.highlight
+    - search.share
+    - search.suggest
+    - toc.follow
+    - toc.integrate
+    - git-revision-date-localized:
+        type: date
+        enable_creation_date: true
 
   palette:
-  - scheme: default #slate
-    primary: indigo
-    accent: indigo
-    toggle:
-      icon: material/eye
-      name: Switch to dark mode
-  - scheme: slate
-    primary: indigo
-    accent: indigo
-    toggle:
-      icon: material/eye-outline
-      name: Switch to light mode
+    - scheme: default
+      primary: indigo
+      accent: indigo
+      toggle:
+        icon: material/eye
+        name: Switch to dark mode
+    - scheme: slate
+      primary: indigo
+      accent: indigo
+      toggle:
+        icon: material/eye-outline
+        name: Switch to light mode
 
-repo_url: https://github.com/suneeta-mall/suneeta-mall.github.io/
-repo_name: suneeta-mall/suneeta-mall.github.io/
-edit_uri: edit/main/docs/
-# use_directory_urls: false
+  language: en
 
-# For RSS feed
-site_description: A space for random musings
-site_name: Random Musings
-site_url: https://suneeta-mall.github.io/
+  font:
+    text: Roboto
+    code: Roboto Mono
 
-# https://squidfunk.github.io/mkdocs-material/reference/math/?h=math#katex
-extra_javascript:
-- javascript/katex.js
-- https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.js
-- https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/contrib/auto-render.min.js
+  analytics:
+    provider: google
+    property: !ENV GOOGLE_ANALYTICS_KEY
 
-extra_css:
-- https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.16.7/katex.min.css
-
-extra:
-  homepage: https://suneeta-mall.github.io/
   social:
-    - icon: fontawesome/brands/linkedin 
+    - icon: fontawesome/brands/linkedin
       link: https://www.linkedin.com/in/suneeta-mall-a6a0507/
-    - icon: fontawesome/brands/github 
+    - icon: fontawesome/brands/github
       link: https://github.com/suneeta-mall
-    - icon: fontawesome/brands/x-twitter 
+    - icon: fontawesome/brands/x-twitter
       link: https://x.com/suneetamall/
     - icon: fontawesome/brands/medium
       link: https://www.medium.com/@suneetamall
-    - icon: fontawesome/brands/google-scholar 
+    - icon: fontawesome/brands/google-scholar
       link: https://scholar.google.com.au/citations?hl=en&user=WD712CUAAAAJ
-    - icon: fontawesome/brands/researchgate 
+    - icon: fontawesome/brands/researchgate
       link: https://www.researchgate.net/profile/Suneeta_Mall3
     - icon: fontawesome/solid/rss
       link: https://suneeta-mall.github.io/feed_rss_created.xml
-    - icon: fontawesome/solid/envelope 
+    - icon: fontawesome/solid/envelope
       link: mailto:suneetamall@gmail.com
-  copyright: Copyright &copy; 2016 - 2024 Suneeta Mall
-  generator: false
 
 plugins:
-- blog:
-    # authors_profiles: true
-    authors: true
-    # authors_file: .authors.yml    
-- social
-- search
-- tags
-- privacy
-- rss
-# - optimize
-- literate-nav:
-    nav_file: SUMMARY.md
-- bibtex:
-    bib_file: "docs/references/refs.bib"
-
+  - blog:
+      authors: true
+  - social
+  - search:
+      separator: '[\s\-,:!=\[\]()"/]+|(?!\b)(?=[A-Z][a-z])|\.(?!\d)|&[lg]t;'
+  - tags:
+      tags_file: tags.md
+      tags_allowed: true
+      tags_extra_files:
+        - docs/blog/posts/*.md
+        - docs/projects/*.md
+        - docs/talks/*.md
+        - docs/poems/*.md
+  - privacy
+  - rss:
+      site_url: https://suneeta-mall.github.io/
+      image_dir: assets/images/social
+      image_url: https://suneeta-mall.github.io/assets/images/social
+  - literate-nav:
+      nav_file: SUMMARY.md
+  - bibtex:
+      bib_file: "docs/references/refs.bib"
+  - minify:
+      minify_html: true
+      minify_js: true
+      minify_css: true
+  - git-revision-date-localized:
+      type: date
+      enable_creation_date: true
+  - recent_posts
 
 markdown_extensions:
-- admonition
-- def_list
-- footnotes
-- pymdownx.betterem
-- pymdownx.details
-- pymdownx.superfences
-- pymdownx.caret
-- pymdownx.mark
-- pymdownx.highlight
-- pymdownx.inlinehilite
-- pymdownx.tilde
-- pymdownx.snippets
-- pymdownx.tabbed:
-    alternate_style: true
-- pymdownx.tasklist:
-    custom_checkbox: true
-- tables
-- attr_list
-- pymdownx.emoji:
-    emoji_index: !!python/name:material.extensions.emoji.twemoji
-    emoji_generator: !!python/name:material.extensions.emoji.to_svg
-- md_in_html
-- toc:
-    permalink: "#"
-    baselevel: 1
-    separator: "-"
+  - admonition
+  - def_list
+  - footnotes
+  - pymdownx.betterem
+  - pymdownx.details
+  - pymdownx.superfences
+  - pymdownx.caret
+  - pymdownx.mark
+  - pymdownx.highlight
+  - pymdownx.inlinehilite
+  - pymdownx.tilde
+  - pymdownx.snippets
+  - pymdownx.tabbed:
+      alternate_style: true
+  - pymdownx.tasklist:
+      custom_checkbox: true
+  - tables
+  - attr_list
+  - pymdownx.emoji:
+      emoji_index: !!python/name:material.extensions.emoji.twemoji
+      emoji_generator: !!python/name:material.extensions.emoji.to_svg
+  - md_in_html
+  - toc:
+      permalink: "#"
+      baselevel: 1
+      separator: "-"
+  - meta
+  - pymdownx.arithmatex:
+      generic: true
+  - pymdownx.smartsymbols
+  - pymdownx.superfences:
+      custom_fences:
+        - name: mermaid
+          class: mermaid
+          format: !!python/name:pymdownx.superfences.fence_code_format
 
-watch:
-- docs
+extra:
+  homepage: https://suneeta-mall.github.io/
+  social:
+    - icon: fontawesome/brands/linkedin
+      link: https://www.linkedin.com/in/suneeta-mall-a6a0507/
+    - icon: fontawesome/brands/github
+      link: https://github.com/suneeta-mall
+    - icon: fontawesome/brands/x-twitter
+      link: https://x.com/suneetamall/
+    - icon: fontawesome/brands/medium
+      link: https://www.medium.com/@suneetamall
+    - icon: fontawesome/brands/google-scholar
+      link: https://scholar.google.com.au/citations?hl=en&user=WD712CUAAAAJ
+    - icon: fontawesome/brands/researchgate
+      link: https://www.researchgate.net/profile/Suneeta_Mall3
+    - icon: fontawesome/solid/rss
+      link: https://suneeta-mall.github.io/feed_rss_created.xml
+    - icon: fontawesome/solid/envelope
+      link: mailto:suneetamall@gmail.com
+  copyright: Copyright &copy; 2016 - 2024 Suneeta Mall
+  generator: false
+  version:
+    provider: mike
 
 nav:
-- Home: README.md
-- Projects:
-  - Deep Learning at Scale: projects/oreilly_deep_learning_at_scale.md
-  # - Curious Cassie: projects/curious_cassie.md
-  - Label Noise with Clean Lab: projects/feature_analysis.md
-  - Feature Analysis: projects/feature_analysis.md
-  - Oreilly Katacode Series: projects/oreilly-interactive-katacode-series-for-reproducible-ml.md
-  - Reproducible-ML: projects/reproducible-ml.md
-  - KCD: projects/KCD.md
-- Blog:
-  - blog/index.md  
-- Talks:
-  - Knowledge Graph Conference 2022: talks/KGC_NY_2022.md
-  - KubeCon NA 2021: talks/KubeCon_NA_2021.md
-  - Kafka Summit APAC 2021: talks/Kafka_Summit_APAC_2021.md
-  - AWS Community Day 2020: talks/AWS_ANZ_Commuity_day_2020.md
-  - AWS She Builds on AWS 2020: talks/She_Builds_on_AWS_2020.md
-  - KubeCon US 2019: talks/KubeCon_US_2019.md
-  - Kubernetes Sydney 2019: talks/KubernetesSydneyForum_AU_2019.md
-  - YOW Data 2019: talks/YOW_Data_Syd_2019.md
-  - KubeCon EU 2018: talks/KubeCon-Europe-2018.md
-  - SPIE 2019: talks/SPIE-2019.md
-  - SPIE 2018: talks/SPIE-2018.md  
-  - SPIE 2015: talks/SPIE-2015.md    
-- Poems:  
-  - Singularity: poems/singularity.md
-  - Life of AI Engineers: poems/life-of-ai-engineer.md
-  - My little Butterfly: poems/my-little-butterfly.md  
-  - Breaking Thy Bias: poems/breaking-thy-bias.md  
-  - Daminis: poems/daminis.md
-  - One Bright Dawn: poems/one-bright-dawn.md  
-  - Aint no Dr. Seuss: poems/aint-no-dr-seuss.md  
-- Children's Books:
-  - Curious Cassie: projects/curious_cassie.md
-- About Me: about.md
\ No newline at end of file
+  - Home: README.md
+  - Projects:
+    - Deep Learning at Scale: projects/oreilly_deep_learning_at_scale.md
+    - Curious Cassie - The Children's Books: projects/curious_cassie.md
+    - Label Noise with Clean Lab: projects/feature_analysis.md
+    - Feature Analysis: projects/feature_analysis.md
+    - Oreilly Katacode Series: projects/oreilly-interactive-katacode-series-for-reproducible-ml.md
+    - Reproducible-ML: projects/reproducible-ml.md
+    - KCD: projects/KCD.md
+  - Blog:
+    - blog/index.md
+  - Tags: tags.md
+  - Talks:
+    - Knowledge Graph Conference 2022: talks/KGC_NY_2022.md
+    - KubeCon NA 2021: talks/KubeCon_NA_2021.md
+    - Kafka Summit APAC 2021: talks/Kafka_Summit_APAC_2021.md
+    - AWS Community Day 2020: talks/AWS_ANZ_Commuity_day_2020.md
+    - AWS She Builds on AWS 2020: talks/She_Builds_on_AWS_2020.md
+    - KubeCon US 2019: talks/KubeCon_US_2019.md
+    - Kubernetes Sydney 2019: talks/KubernetesSydneyForum_AU_2019.md
+    - YOW Data 2019: talks/YOW_Data_Syd_2019.md
+    - KubeCon EU 2018: talks/KubeCon-Europe-2018.md
+    - SPIE 2019: talks/SPIE-2019.md
+    - SPIE 2018: talks/SPIE-2018.md
+    - SPIE 2015: talks/SPIE-2015.md
+  - Poems:
+    - Singularity: poems/singularity.md
+    - Life of AI Engineers: poems/life-of-ai-engineer.md
+    - My little Butterfly: poems/my-little-butterfly.md
+    - Breaking Thy Bias: poems/breaking-thy-bias.md
+    - Daminis: poems/daminis.md
+    - One Bright Dawn: poems/one-bright-dawn.md
+    - Aint no Dr. Seuss: poems/aint-no-dr-seuss.md
+  - About Me: about.md
\ No newline at end of file
diff --git a/mkdocs_plugins/__init__.py b/mkdocs_plugins/__init__.py
new file mode 100644
index 0000000..74cec66
--- /dev/null
+++ b/mkdocs_plugins/__init__.py
@@ -0,0 +1 @@
+"""Custom MkDocs plugins."""
diff --git a/mkdocs_plugins/recent_posts.py b/mkdocs_plugins/recent_posts.py
new file mode 100644
index 0000000..779c721
--- /dev/null
+++ b/mkdocs_plugins/recent_posts.py
@@ -0,0 +1,77 @@
+import re
+from datetime import datetime
+from pathlib import Path
+
+from mkdocs.plugins import BasePlugin
+
+
+class RecentPostsPlugin(BasePlugin):
+    def __init__(self: "RecentPostsPlugin") -> None:
+        self.recent_posts = []
+
+    def on_files(
+        self: "RecentPostsPlugin", files: list[dict], config: dict
+    ) -> list[dict]:
+        # Get all blog post files
+        blog_posts = []
+        for file in files:
+            if file.src_path.startswith("blog/posts/") and file.src_path.endswith(
+                ".md"
+            ):
+                # Extract date from filename (format: YYYY-MM-DD-title.md)
+                match = re.match(
+                    r"blog/posts/(\d{4})-(\d{2})-(\d{2})-.*\.md", file.src_path
+                )
+                if match:
+                    year, month, day = match.groups()
+                    try:
+                        date = datetime.strptime(f"{year}-{month}-{day}", "%Y-%m-%d")  # noqa: DTZ007
+                        with Path(file.abs_src_path).open("r", encoding="utf-8") as f:
+                            content = f.read()
+                            title_match = re.search(
+                                r'title:\s*["\']?(.+?)["\']?(?:\n|$)', content
+                            )
+                            if title_match:
+                                title = title_match.group(1).strip()
+                                slug = title.lower()
+                                slug = re.sub(r"[^\w\s-]", "", slug)
+                                slug = re.sub(r"\s+", "-", slug)
+                                slug = re.sub(r"-+", "-", slug)
+                                slug = slug.strip("-")
+                                url_path = f"/blog/{year}/{month}/{day}/{slug}/"
+
+                                blog_posts.append(
+                                    {"date": date, "title": title, "url": url_path}
+                                )
+                    except ValueError:
+                        continue
+
+        self.recent_posts = sorted(blog_posts, key=lambda x: x["date"], reverse=True)[
+            :3
+        ]
+        return files
+
+    def on_page_markdown(
+        self: "RecentPostsPlugin",
+        markdown: str,
+        page: dict,
+        config: dict,
+        files: list[dict],
+    ) -> str:
+        if page.file.src_path == "README.md":
+            # Create the recent posts section
+            recent_posts_md = '## Recent Blog Posts\n\n!!! abstract "Latest Articles"\n'
+            for post in self.recent_posts:
+                date_str = post["date"].strftime("%B %d, %Y")
+                recent_posts_md += (
+                    f"    - [{date_str} - {post['title']}]({post['url']})\n"
+                )
+
+            # Replace the existing recent posts section
+            markdown = re.sub(
+                r"## Recent Blog Posts.*?(?=## |$)",
+                recent_posts_md,
+                markdown,
+                flags=re.DOTALL,
+            )
+        return markdown
diff --git a/overrides/main.html b/overrides/main.html
index 4a192ba..8c0500e 100644
--- a/overrides/main.html
+++ b/overrides/main.html
@@ -1,10 +1,159 @@
 {% extends "base.html" %}
 
 {% block announce %}
-<!-- Add announcement here, including arbitrary HTML -->
-<h3 id="2121837"><a href="https://oreillymedia.pxf.io/c/5668688/2121837/15173">
-        I am excited to share the release of "Deep Learning at Scale: At the Intersection of Hardware, Software, and Data," now available through O'Reilly. If you're curious, I invite you to take advantage of a 30-day trial to dive into the content and see what it has to offer. We hope you enjoy the journey!
-</a></h3>
-<!-- <a href="https://oreillymedia.pxf.io/c/5668688/2121843/15173" target="_top" id="2121843"><img
-        src="//a.impactradius-go.com/display-ad/15173-2121843" border="0" alt="" width="400" height="525" /></a> -->
+<a href="/projects/oreilly_deep_learning_at_scale/">
+        <strong>🎉 New Book Release!</strong> Check out "Deep Learning at Scale" - An O'Reilly Book
+</a>
 {% endblock %}
+
+{% block content %}
+{{ super() }}
+<script>
+        // Add back to top button
+        document.addEventListener('DOMContentLoaded', function () {
+                const backToTop = document.createElement('button');
+                backToTop.innerHTML = '↑';
+                backToTop.className = 'back-to-top';
+                backToTop.style.cssText = `
+        position: fixed;
+        bottom: 20px;
+        right: 20px;
+        width: 40px;
+        height: 40px;
+        border-radius: 50%;
+        background: var(--md-primary-fg-color);
+        color: var(--md-primary-bg-color);
+        border: none;
+        cursor: pointer;
+        display: none;
+        align-items: center;
+        justify-content: center;
+        font-size: 20px;
+        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
+        z-index: 1000;
+      `;
+                document.body.appendChild(backToTop);
+
+                window.addEventListener('scroll', function () {
+                        if (window.pageYOffset > 100) {
+                                backToTop.style.display = 'flex';
+                        } else {
+                                backToTop.style.display = 'none';
+                        }
+                });
+
+                backToTop.addEventListener('click', function () {
+                        window.scrollTo({ top: 0, behavior: 'smooth' });
+                });
+        });
+
+        // Add reading time estimation
+        document.addEventListener('DOMContentLoaded', function () {
+                const article = document.querySelector('article');
+                if (article) {
+                        const text = article.textContent;
+                        const wordCount = text.split(/\s+/).length;
+                        const readingTime = Math.ceil(wordCount / 200); // Assuming 200 words per minute
+                        const readingTimeElement = document.createElement('div');
+                        readingTimeElement.className = 'reading-time';
+                        readingTimeElement.innerHTML = `⏱️ ${readingTime} min read`;
+                        readingTimeElement.style.cssText = `
+          position: absolute;
+          top: 0;
+          right: 0;
+          padding: 8px;
+          font-size: 0.8em;
+          color: var(--md-default-fg-color--light);
+        `;
+                        article.insertBefore(readingTimeElement, article.firstChild);
+                }
+        });
+
+        // Add progress bar
+        document.addEventListener('DOMContentLoaded', function () {
+                const progressBar = document.createElement('div');
+                progressBar.className = 'reading-progress';
+                progressBar.style.cssText = `
+        position: fixed;
+        top: 0;
+        left: 0;
+        height: 3px;
+        background: var(--md-primary-fg-color);
+        z-index: 1000;
+        transition: width 0.2s ease;
+      `;
+                document.body.appendChild(progressBar);
+
+                window.addEventListener('scroll', function () {
+                        const winScroll = document.body.scrollTop || document.documentElement.scrollTop;
+                        const height = document.documentElement.scrollHeight - document.documentElement.clientHeight;
+                        const scrolled = (winScroll / height) * 100;
+                        progressBar.style.width = scrolled + '%';
+                });
+        });
+</script>
+
+<style>
+        /* Mobile responsiveness improvements */
+        @media screen and (max-width: 76.1875em) {
+                .md-nav--primary .md-nav__title {
+                        background: var(--md-primary-fg-color);
+                        color: var(--md-primary-bg-color);
+                }
+
+                .md-nav--primary .md-nav__title[for="__drawer"] {
+                        background: var(--md-primary-fg-color);
+                        color: var(--md-primary-bg-color);
+                }
+        }
+
+        /* Improve code block appearance */
+        .md-typeset pre>code {
+                padding: 1em;
+                border-radius: 4px;
+        }
+
+        /* Enhance admonition boxes */
+        .md-typeset .admonition {
+                border-radius: 4px;
+                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
+        }
+
+        /* Improve table appearance */
+        .md-typeset table {
+                border-radius: 4px;
+                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
+        }
+
+        /* Enhance link appearance */
+        .md-typeset a {
+                color: var(--md-primary-fg-color);
+                text-decoration: none;
+                border-bottom: 1px solid var(--md-primary-fg-color);
+                transition: border-bottom-color 0.2s ease;
+        }
+
+        .md-typeset a:hover {
+                border-bottom-color: transparent;
+        }
+
+        /* Improve heading appearance */
+        .md-typeset h1 {
+                color: var(--md-primary-fg-color);
+                font-weight: 700;
+        }
+
+        /* Add smooth scrolling */
+        html {
+                scroll-behavior: smooth;
+        }
+
+        /* Improve mobile navigation */
+        @media screen and (max-width: 76.1875em) {
+                .md-nav--primary .md-nav__title {
+                        background: var(--md-primary-fg-color);
+                        color: var(--md-primary-bg-color);
+                }
+        }
+</style>
+{% endblock %}
\ No newline at end of file
diff --git a/requirements.txt b/requirements.txt
index 536de02..80cc60c 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,5 +1,11 @@
+ruff==0.11.0
 mkdocs==1.5.3
 mkdocs-material[imaging]==9.5.18
 mkdocs-literate-nav==0.6.1
 mkdocs-bibtex==2.16.0 
-mkdocs-rss-plugin==1.15.0
\ No newline at end of file
+mkdocs-rss-plugin==1.15.0
+mkdocs-minify-plugin>=0.8.0
+# mkdocs-blog-plugin>=1.0.0
+mkdocs-git-revision-date-localized-plugin>=1.0.0
+mkdocs-bibtex>=0.1.0
+-e .
\ No newline at end of file
diff --git a/ruff.toml b/ruff.toml
new file mode 100644
index 0000000..d4ef9fd
--- /dev/null
+++ b/ruff.toml
@@ -0,0 +1,203 @@
+# When linting our code we work on the principle of "check everything, all the time",
+# and then work backwards from there, disabling specific checks that we decide do
+# not provide a positive cost/benefit comparison.
+
+# Enable all by default. We disable specific rules in the 'ignore' block.
+lint.select = ["ALL"]
+
+# We currently ignore the following checks. Over time we should aim to improve
+# the consistency and quality of our code so that we no longer need to ignore them.
+lint.ignore = [
+  # The following warnings are disabled because we specifically don't want to enable them.
+  #
+  # Before adding a warning here, please consider whether you can disable it
+  # with an in-line comment. Ignore warnings here are applied to all our code,
+  # all of the time!
+
+  # NOTHING HERE YET :-)
+
+  # The checks below are ignored because when we first started using ruff
+  # we had failures in these categories. Over time we aim to fix our code
+  # so that these warnings do not need to be disabled, or else move them
+  # up into the list of intentionally disabled warnings.
+  #
+  # Checks with a ** marker can be completely auto-fixed using `ruff --fix`.
+  # Checks with a *  marker can be partially auto-fixed using `ruff --fix`.
+
+  "ANN001", #    missing-type-function-argument - Missing type annotation for function argument `{name}` - https://docs.astral.sh/ruff/rules/missing-type-function-argument/
+  "ANN002", #    missing-type-args - Missing type annotation for `*{name}` - https://docs.astral.sh/ruff/rules/missing-type-args/
+  "ANN003", #    missing-type-kwargs - Missing type annotation for `**{name}` - https://docs.astral.sh/ruff/rules/missing-type-kwargs/  
+  "ANN401", #    any-type - Dynamically typed expressions (typing.Any) are disallowed in `{name}` - https://docs.astral.sh/ruff/rules/any-type/
+
+  "ARG002", #    unused-method-argument - Unused method argument: `{name}`
+
+  "ASYNC100", #  Async functions should not call blocking HTTP methods
+
+  "B006", #    mutable-argument-default - Do not use mutable data structures for argument defaults
+  "B008", #    function-call-in-default-argument - Do not perform function call `{name}` in argument defaults
+  "B023", #    function-uses-loop-variable - Function definition does not bind loop variable `{name}`
+
+  "BLE001", #    blind-except - Do not catch blind exception: `{name}`
+
+  "C901", #    complex-structure - `{name}` is too complex ({complexity} > {max_complexity}) - https://docs.astral.sh/ruff/rules/complex-structure/
+
+  "COM812", # ** missing-trailing-comma - Trailing comma missing
+
+  "D100", #    undocumented-public-module - Missing docstring in public module
+  "D101", #    undocumented-public-class - Missing docstring in public class
+  "D102", #    undocumented-public-method - Missing docstring in public method
+  "D103", #    undocumented-public-function - Missing docstring in public function
+  "D104", #    undocumented-public-package - Missing docstring in public package
+  "D105", #    undocumented-magic-method - Missing docstring in magic method
+  "D106", #    undocumented-public-nested-class - Missing docstring in public nested class
+  "D107", #    undocumented-public-init - Missing docstring in `__init__`
+  "D202", # ** no-blank-line-after-function - No blank lines allowed after function docstring (found {num_lines})
+  "D203", # ** one-blank-line-before-class - 1 blank line required before class docstring
+  "D205", # *  blank-line-after-summary - 1 blank line required between summary line and description
+  "D212", # ** multi-line-summary-first-line - Multi-line docstring summary should start at the first line
+  "D213", # ** multi-line-summary-second-line - Multi-line docstring summary should start at the second line
+  "D400", # ** ends-in-period - First line should end with a period
+  "D401", #    non-imperative-mood - First line of docstring should be in imperative mood: "{first_line}"
+  "D404", #    docstring-starts-with-this - First word of the docstring should not be "This"
+  "D406", # ** new-line-after-section-name - Section name should end with a newline ("{name}")
+  "D407", # ** dashed-underline-after-section - Missing dashed underline after section ("{name}")
+  "D413", # ** Missing blank line after last section
+  "D415", # ** ends-in-punctuation - First line should end with a period, question mark, or exclamation point
+  "D417", #    undocumented-param - Missing argument description in the docstring: `{name}`
+
+  "DTZ005", #    call-datetime-now-without-tzinfo - The use of `datetime.datetime.now()` without `tz` argument is not allowed
+  "DTZ011", #    call-date-today - The use of `datetime.date.today()` is not allowed, use `datetime.datetime.now(tz=).date()` instead
+
+  "E501", #    line-too-long - Line too long ({width} > {limit} characters) - https://docs.astral.sh/ruff/rules/line-too-long/
+
+  "EM101", #    raw-string-in-exception - Exception must not use a string literal, assign to variable first - https://docs.astral.sh/ruff/rules/raw-string-in-exception/
+  "EM102", #    f-string-in-exception - Exception must not use an f-string literal, assign to variable first - https://docs.astral.sh/ruff/rules/f-string-in-exception/
+
+  "ERA001", # ** commented-out-code - Found commented-out code - https://docs.astral.sh/ruff/rules/commented-out-code/
+
+  "FA100",  #    Missing `from __future__ import annotations`, but uses `typing.Dict`
+
+  "FBT001", #    boolean-positional-arg-in-function-definition - Boolean positional arg in function definition
+  "FBT002", #    boolean-default-value-in-function-definition - Boolean default value in function definition
+  "FBT003", #    boolean-positional-value-in-function-call - Boolean positional value in function call
+
+  "FIX001", #    Line contains FIXME, consider resolving the issue
+  "FIX002", #    Line contains TODO, consider resolving the issue
+
+  "G004", #    logging-f-string - Logging statement uses f-string
+
+  "INP001", #    implicit-namespace-package - File `{filename}` is part of an implicit namespace package. Add an `__init__.py`. - https://docs.astral.sh/ruff/rules/implicit-namespace-package/
+
+  "ISC001", #    single-line-implicit-string-concatenation - Implicitly concatenated string literals on one line -https://docs.astral.sh/ruff/rules/single-line-implicit-string-concatenation/
+
+  "N802", #    invalid-function-name - Function name `{name}` should be lowercase - https://docs.astral.sh/ruff/rules/invalid-function-name/
+  "N803", #    invalid-argument-name - Argument name `{name}` should be lowercase
+  "N805", #    invalid-first-argument-name-for-method - First argument of a method should be named `self` - https://docs.astral.sh/ruff/rules/invalid-first-argument-name-for-method/
+  "N806", #    non-lowercase-variable-in-function - Variable `{name}` in function should be lowercase - https://docs.astral.sh/ruff/rules/non-lowercase-variable-in-function/
+  "N812", #    lowercase-imported-as-non-lowercase - Lowercase `{name}` imported as non-lowercase `{asname}` - https://docs.astral.sh/ruff/rules/lowercase-imported-as-non-lowercase/
+
+  "NPY002", #    numpy-legacy-random - Replace legacy `np.random.{method_name}` call with `np.random.Generator` - https://docs.astral.sh/ruff/rules/numpy-legacy-random/
+
+  "PD002", # ** pandas-use-of-inplace-argument - `inplace=True` should be avoided; it has inconsistent behavior - https://docs.astral.sh/ruff/rules/pandas-use-of-inplace-argument/
+  "PD011", #    pandas-use-of-dot-values - Use `.to_numpy()` instead of `.values`
+  "PD901", #    pandas-df-variable-name - `df` is a bad variable name. Be kinder to your future self.
+
+  "PERF203", #   `try`-`except` within a loop incurs performance overhead
+  "PERF401", #    Use a list comprehension to create a transformed list
+
+  "PLR0912", #    too-many-branches - Too many branches ({branches} > {max_branches})
+  "PLR0913", #    too-many-arguments - Too many arguments to function call ({c_args} > {max_args})
+  "PLR2004", #    magic-value-comparison - Magic value used in comparison, consider replacing {value} with a constant variable
+
+  "PLW1510", #   `subprocess.run` without explicit `check` argument
+  "PLW2901", #    redefined-loop-name - Outer {outer_kind} variable `{name}` overwritten by inner {inner_kind} target - https://docs.astral.sh/ruff/rules/redefined-loop-name/
+
+  "PT001", # ** pytest-fixture-incorrect-parentheses-style - Use `@pytest.fixture{expected_parens}` over `@pytest.fixture{actual_parens}`
+  "PT003", # ** pytest-extraneous-scope-function - `scope='function'` is implied in `@pytest.fixture()`
+  
+  "RET505", #    superfluous-else-return - Unnecessary `{branch}` after `return` statement
+  "RET507", #    superfluous-else-continue - Unnecessary `{branch}` after `continue` statement
+
+  "RUF005", # *  collection-literal-concatenation - Consider `{expr}` instead of concatenation
+  "RUF012", #    Mutable class attributes should be annotated with `typing.ClassVar`
+  "RUF015", # *  Prefer `next(...)` over single element slice
+
+  "S101", #    assert - Use of `assert` detected
+  "S113", #    request-without-timeout - Probable use of requests call with timeout set to `{value}`
+  "S311", #    suspicious-non-cryptographic-random-usage - Standard pseudo-random generators are not suitable for cryptographic purposes
+  "S506", #    unsafe-yaml-load - Probable use of unsafe loader `{name}` with `yaml.load`. Allows instantiation of arbitrary objects. Consider `yaml.safe_load`.
+  "S602", #   `subprocess` call with `shell=True` seems safe, but may be changed in the future; consider rewriting without `shell`
+  "S603", #    `subprocess` call: check for execution of untrusted input
+  "S607", #    Starting a process with a partial executable path
+  "S608", #    hardcoded-sql-expression - Possible SQL injection vector through string-based query construction - https://docs.astral.sh/ruff/rules/hardcoded-sql-expression/
+
+  "SIM102", # *  collapsible-if - Use a single `if` statement instead of nested `if` statements
+  "SIM108", # *  if-else-block-instead-of-if-exp - Use ternary operator `{contents}` instead of `if`-`else`-block
+  "SIM115", #    open-file-with-context-handler - Use context handler for opening files
+
+  "SLF001", #    private-member-access - Private member accessed: `{access}` - https://docs.astral.sh/ruff/rules/private-member-access/
+
+  "T201", #    print - `print` found
+
+  "TD001",  #    Invalid TODO tag: `FIXME`
+  "TD003",  #    Missing issue link on the line following this TODO
+
+  "TRY002", #    raise-vanilla-class - Create your own exception - https://docs.astral.sh/ruff/rules/raise-vanilla-class/
+  "TRY003", #    raise-vanilla-args - Avoid specifying long messages outside the exception class
+  "TRY300", #    Consider moving this statement to an `else` block
+
+  "UP006", # *  non-pep585-annotation - Use `{}` instead of `{}` for type annotations
+  "UP007", # *  non-pep604-annotation - Use `X | Y` for type annotations
+]
+
+# Allow autofix for all enabled rules (when `--fix`) is provided.
+lint.fixable = ["ALL"]
+lint.unfixable = []
+
+# Exclude a variety of commonly ignored directories.
+exclude = [
+    ".bzr",
+    ".direnv",
+    ".eggs",
+    ".git",
+    ".hg",
+    ".mypy_cache",
+    ".nox",
+    ".pants.d",
+    ".pytype",
+    ".ruff_cache",
+    ".svn",
+    ".tox",
+    ".venv",
+    ".gvenv",
+    "scripts/stage2/vqa_dataset_generation/add_ons",
+    "__pypackages__",
+    "_build",
+    "buck-out",
+    "build",
+    "dist",
+    "node_modules",
+    "autostubs",
+    "pocs/pr0/", # poc directories
+]
+
+line-length = 88
+
+# Allow unused variables when underscore-prefixed.
+lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
+
+# Python 3.11.
+target-version = "py311"
+
+[lint.mccabe]
+# Unlike Flake8, default to a complexity level of 10.
+max-complexity = 10
+
+[lint.isort]
+# If rule I001 isn't identifying within-repo imports as "first party"
+# you might want to list them here.
+# https://docs.astral.sh/settings/#known-first-party
+known-first-party = ["mkdocs_plugins"]
+
+[lint.flake8-pytest-style]
+mark-parentheses = false
\ No newline at end of file
diff --git a/setup.py b/setup.py
new file mode 100644
index 0000000..1533bbe
--- /dev/null
+++ b/setup.py
@@ -0,0 +1,15 @@
+from setuptools import find_packages, setup
+
+setup(
+    name="mkdocs-recent-posts-plugin",
+    version="0.1.0",
+    packages=find_packages(),
+    install_requires=[
+        "mkdocs>=1.0.0",
+    ],
+    entry_points={
+        "mkdocs.plugins": [
+            "recent_posts = mkdocs_plugins.recent_posts:RecentPostsPlugin",
+        ]
+    },
+)
